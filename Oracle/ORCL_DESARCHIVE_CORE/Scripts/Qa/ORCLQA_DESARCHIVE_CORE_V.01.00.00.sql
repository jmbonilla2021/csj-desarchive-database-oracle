/*
-------------------------------------------------------------------------------------------------------------------------------
-- OBJETIVO                  : Creacion del modelo relacional BD DESARCHIVE CORE Modulo desarchive.
-- PARÁMETROS DE ENTRADA     : La ejecución del script solicita los siguientes parametros
								SERVICIO        : ORCLQA_DESARCHIVE_CORE
								SIZE_TABLESPACE : DEVOPS -> 10
								                  19C    -> 1000
												  21C    -> 1000
-- PARÁMETROS DE SALIDA      : NA   
-- OBJETOS QUE LO REFERENCIAN: NA
-- LIDER TÉCNICO             : Gabriel Eduardo Duarte             
-- FECHAHORA                 : 2021/11/23
-- REALIZADO POR             : INFORMATICA & TECNOLOGIA (GEDV - JAPC)
--	                           Este componente fue realizado bajo la metodología de desarrollo de Informática & Tecnología 
--                             y se encuentra Protegido por las leyes de derechos de autor.
-- FECHAHORA MODIFICACIÓN    : 
-- LIDER MODIFICACIÓN        : 
-- REALIZADO POR             : 
-- OBJETIVO MODIFICACIÓN     : 
--                             
-----------------------------------------------------------------------------------------------------------------------------
*/
DECLARE
   V_CREASERVICIO   VARCHAR2(4000);
   V_INICIASERVICIO VARCHAR2(4000);
   V_SERVICIO       VARCHAR2(500);
   V_SIZE_TBL       NUMBER;
   V_CREATABLESDATA VARCHAR2(4000);
   V_CREATABLESIDX  VARCHAR2(4000);
   V_RUTA           VARCHAR2(500);
   V_RUTA_DATA      VARCHAR2(500);
   V_RUTA_IDX       VARCHAR2(500);
   V_CREA_USUARIO   VARCHAR2(500);
   V_USUARIO        VARCHAR2(500);
   V_CREA_ROL       VARCHAR2(500);   
   
BEGIN
    DELETE FROM AUDITORIA_OBJETOS;COMMIT;
	PROC_AUDITA_OBJETOS('DESARCHIVE SITIO WEB','ORCLQA_DESARCHIVE_CORE','CREACION BD',NULL,NULL);
    V_SERVICIO := '&SERVICIO';
	V_SIZE_TBL := '&SIZE_TABLESPACE';
    --Creando servicio
    V_CREASERVICIO := 'BEGIN
                          DBMS_SERVICE.CREATE_SERVICE(
                            SERVICE_NAME => :SERVICIO,
                            NETWORK_NAME => :SERVICIO);
                        END;';
    EXECUTE IMMEDIATE V_CREASERVICIO USING V_SERVICIO;                    
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA SERVICIO '||V_SERVICIO||' OK.',NULL,NULL);

    --Iniciando servicio
    V_INICIASERVICIO := ' BEGIN
                           DBMS_SERVICE.START_SERVICE(SERVICE_NAME => :SERVICIO);
                        END;';
    EXECUTE IMMEDIATE V_INICIASERVICIO USING V_SERVICIO;
    PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA SERVICIO '||V_SERVICIO||' OK.',NULL,NULL);
    
    EXECUTE IMMEDIATE 'CREATE ROLE ROLQA_DESARCHIVE_CORE';
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA ROL OK.',NULL,NULL);
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE VIEW, CREATE TRIGGER,CREATE PROCEDURE TO ROLQA_DESARCHIVE_CORE';
    PROC_AUDITA_OBJETOS(NULL,NULL,'OTORGA PERMISOS OK.',NULL,NULL);
    
    ---Obteniendo ruta de instalacion del motor
    SELECT SUBSTR(FILE_NAME,1,INSTR(FILE_NAME,'\',-1))
    INTO   V_RUTA
    FROM   DBA_DATA_FILES
    WHERE  ROWNUM = 1;

    ---Creando tablespacedata
    V_RUTA_DATA      := V_RUTA||V_SERVICIO||'_DATA.DBF';
    V_CREATABLESDATA := 'CREATE TABLESPACE '||V_SERVICIO||'_DATA DATAFILE '''||V_RUTA_DATA||''' SIZE '||V_SIZE_TBL||'m AUTOEXTEND ON NEXT 10m MAXSIZE UNLIMITED';
    EXECUTE IMMEDIATE V_CREATABLESDATA;
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA TABLESPACE DATA '||V_RUTA_DATA||' OK...',NULL,NULL);

    ---Creando tablespace idx
    V_RUTA_IDX      := V_RUTA||V_SERVICIO||'_IDX.DBF';
    V_CREATABLESIDX := 'CREATE TABLESPACE '||V_SERVICIO||'_IDX  DATAFILE '''||V_RUTA_IDX||''' SIZE '||V_SIZE_TBL||'m AUTOEXTEND ON NEXT 10m MAXSIZE UNLIMITED';
    EXECUTE IMMEDIATE V_CREATABLESIDX;
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA TABLESPACE IDX '||V_RUTA_IDX||' OK...',NULL,NULL);

    ---Creando usuario
    V_USUARIO := 'SCH_'||V_SERVICIO;
    V_CREA_USUARIO := '
                    CREATE USER '||V_USUARIO||' IDENTIFIED BY '||V_USUARIO||'
                    DEFAULT TABLESPACE '||V_SERVICIO||'_DATA
                    TEMPORARY TABLESPACE TEMP
                    QUOTA UNLIMITED ON '||V_SERVICIO||'_DATA';
    EXECUTE IMMEDIATE V_CREA_USUARIO;   
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA USUARIO '||V_USUARIO||' OK...',NULL,NULL);

    ---Otorgando permisos al usuario
    EXECUTE IMMEDIATE 'GRANT ROLQA_DESARCHIVE_CORE TO '||V_USUARIO;
    PROC_AUDITA_OBJETOS(NULL,NULL,'OTORTANDO PERMISOS ROL, OK...',NULL,NULL);
    PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA CREACION OBJETOS BD ....',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR DURANTE INSTALACION BD',SQLCODE,SQLERRM);
END;
/


CREATE TABLE SCH_ORCLQA_DESARCHIVE_CORE.BODEGA (
    ID_BODEGA      NUMBER(19) NOT NULL,
    IDENTIFICACION NVARCHAR2(1000) NOT NULL,
    NOMBRE         NVARCHAR2(1000) NOT NULL,
    TELEFONO       NVARCHAR2(500) NOT NULL,
    DIRECCION      NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO      NUMBER(1) NOT NULL,
    ID_MUNICIPIO   NUMBER(19) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCLQA_DESARCHIVE_CORE.IDX_IDENTIFICACION ON
    SCH_ORCLQA_DESARCHIVE_CORE.BODEGA (
        IDENTIFICACION
    ASC );

ALTER TABLE SCH_ORCLQA_DESARCHIVE_CORE.BODEGA ADD CONSTRAINT PK_BDG PRIMARY KEY ( ID_BODEGA );

CREATE TABLE SCH_ORCLQA_DESARCHIVE_CORE.JURISDICCION (
    ID_JURISDICCION NUMBER(19) NOT NULL,
    CODIGO          NUMBER NOT NULL,
    NOMBRE          NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO       NUMBER(1) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCLQA_DESARCHIVE_CORE.IDX_JDC_CODIGO ON
    SCH_ORCLQA_DESARCHIVE_CORE.JURISDICCION (
        ID_JURISDICCION
    ASC,
        CODIGO
    ASC );

ALTER TABLE SCH_ORCLQA_DESARCHIVE_CORE.JURISDICCION ADD CONSTRAINT PK_JDC PRIMARY KEY ( ID_JURISDICCION );

CREATE TABLE SCH_ORCLQA_DESARCHIVE_CORE.JURISDICCION_POR_BODEGA (
    ID_BODEGA       NUMBER(19) NOT NULL,
    ID_JURISDICCION NUMBER(19) NOT NULL
);

ALTER TABLE SCH_ORCLQA_DESARCHIVE_CORE.JURISDICCION_POR_BODEGA ADD CONSTRAINT PK_JXB PRIMARY KEY ( ID_BODEGA,
                                                                                                 ID_JURISDICCION );

CREATE TABLE SCH_ORCLQA_DESARCHIVE_CORE.USUARIO_POR_BODEGA (
    ID_USUARIO NUMBER(19) NOT NULL,
    ID_BODEGA  NUMBER(19) NOT NULL
);

ALTER TABLE SCH_ORCLQA_DESARCHIVE_CORE.USUARIO_POR_BODEGA ADD CONSTRAINT PK_USU_BDG PRIMARY KEY ( ID_USUARIO,
                                                                                                ID_BODEGA );

ALTER TABLE SCH_ORCLQA_DESARCHIVE_CORE.JURISDICCION_POR_BODEGA
    ADD CONSTRAINT FK_BDG_JXB FOREIGN KEY ( ID_BODEGA )
        REFERENCES SCH_ORCLQA_DESARCHIVE_CORE.BODEGA ( ID_BODEGA );

ALTER TABLE SCH_ORCLQA_DESARCHIVE_CORE.JURISDICCION_POR_BODEGA
    ADD CONSTRAINT FK_JDC_JXB FOREIGN KEY ( ID_JURISDICCION )
        REFERENCES SCH_ORCLQA_DESARCHIVE_CORE.JURISDICCION ( ID_JURISDICCION );

CREATE SEQUENCE SCH_ORCLQA_DESARCHIVE_CORE.SEQ_BODEGA START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCLQA_DESARCHIVE_CORE.TRG_BODEGA BEFORE
    INSERT ON SCH_ORCLQA_DESARCHIVE_CORE.BODEGA
    FOR EACH ROW
    WHEN ( NEW.ID_BODEGA IS NULL )
BEGIN
    :NEW.ID_BODEGA := SCH_ORCLQA_DESARCHIVE_CORE.SEQ_BODEGA.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCLQA_DESARCHIVE_CORE.SEQ_JURISDICCION START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCLQA_DESARCHIVE_CORE.TRG_JURISDICCION BEFORE
    INSERT ON SCH_ORCLQA_DESARCHIVE_CORE.JURISDICCION
    FOR EACH ROW
    WHEN ( NEW.ID_JURISDICCION IS NULL )
BEGIN
    :NEW.ID_JURISDICCION := SCH_ORCLQA_DESARCHIVE_CORE.SEQ_JURISDICCION.NEXTVAL;
END;
/

--- GENERACION DE PERMISOS 
DECLARE
  V_ROL  VARCHAR2(4000);
  CURSOR C_PERMISOS
  IS 
    SELECT 'GRANT SELECT, INSERT, UPDATE, DELETE ON SCH_ORCLQA_DESARCHIVE_CORE.'||TABLE_NAME||' TO ' AS SENTENCIA
    FROM   USER_TABLES;
  R_PER C_PERMISOS%ROWTYPE;
BEGIN
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA CREACION OBJETOS OK....',NULL,NULL);
  PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA ASIGNACION PERMISOS OBJETOS....',NULL,NULL);
  V_ROL := 'ROLQA_DESARCHIVE_CORE';
  OPEN C_PERMISOS;
  LOOP
    FETCH C_PERMISOS INTO R_PER;
    EXIT WHEN C_PERMISOS%NOTFOUND;
      EXECUTE IMMEDIATE R_PER.SENTENCIA||V_ROL;
  END LOOP;
  CLOSE C_PERMISOS;
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA ASIGNACION PERMISOS OBJETOS OK....',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    IF C_PERMISOS%ISOPEN THEN CLOSE C_PERMISOS; END IF;
	PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR GENERANDO PERMISOS....',SQLCODE,SQLERRM);
END;
/
DECLARE
  v_texto VARCHAR2(4000);
  v_idx   VARCHAR2(4000):= 'ORCLQA_DESARCHIVE_CORE_IDX';
  v_ow    VARCHAR2(4000):= 'SCH_ORCLQA_DESARCHIVE_CORE';
  CURSOR c_index(p_tbl_idx VARCHAR2,
                 p_tbl_ow  VARCHAR2)
  IS 
    SELECT ('ALTER INDEX '||OWNER||'.'||INDEX_NAME||' REBUILD TABLESPACE '||p_tbl_idx)AS SENTENCIA
    FROM ALL_INDEXES WHERE OWNER = v_ow; 
  r_index c_index%ROWTYPE;
BEGIN
  PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA ASIGNACION INDICES OBJETOS A TABLESPACE IDX....',NULL,NULL);
  OPEN c_index(v_idx,v_ow);
  LOOP
  FETCH c_index INTO r_index;
  EXIT WHEN c_index%NOTFOUND;
    EXECUTE IMMEDIATE r_index.sentencia;
  END LOOP;
  CLOSE c_index;
  EXECUTE IMMEDIATE 'ALTER USER '||v_ow||' QUOTA 1000M on '||v_idx||'';  -- ASIGNA LA CUOTA AL TABLESPACE DE INDICE
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA ASIGNACION INDICES OBJETOS A TABLESPACE IDX OK....',NULL,NULL);
  PROC_AUDITA_OBJETOS('DESARCHIVE SITIO WEB','ORCLQA_DESARCHIVE_CORE','FINALIZACION CREACION BD',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    IF c_index%ISOPEN THEN CLOSE c_index; END IF;
    PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR ASIGNANDO OBJ A TABLESPACES IDX....',SQLCODE,SQLERRM);
END;