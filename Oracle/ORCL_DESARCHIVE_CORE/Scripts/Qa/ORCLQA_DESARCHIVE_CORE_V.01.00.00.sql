/*
-------------------------------------------------------------------------------------------------------------------------------
-- OBJETIVO                  : Creacion del modelo relacional para el modulo desarchive Negocio:
                               1. Creacion tablas
							   2. Llaves primarias
							   3. Llaves foraneas
							   4. Auticremento por tabla
                               para el modulo de Reparto.
-- PARÁMETROS DE ENTRADA     : La ejecución del script solicita los siguientes parametros:

								SERVICENAME :  ORCLQA_DESARCHIVE_CORE
								NETWORKNAME :  ORCLQA_DESARCHIVE_CORE

								19C: TABLESPACEDATA: C:\ORACLE19C\ORADATA\ORCL\ORCLQA_DESARCHIVE_CORE_DATA.DBF 
								19C: TABLESPACEIDX : C:\ORACLE19C\ORADATA\ORCL\ORCLQA_DESARCHIVE_CORE_IDX.DBF  
								
								DEVOPS: G:\APP\GDUARTE\PRODUCT\18.0.0\ORADATA\XE\ORCLQA_DESARCHIVE_CORE_DATA.DBF
								DEVOPS: G:\APP\GDUARTE\PRODUCT\18.0.0\ORADATA\XE\ORCLQA_DESARCHIVE_CORE_IDX.DBF	  
-- PARÁMETROS DE SALIDA      : NA   
-- OBJETOS QUE LO REFERENCIAN: NA
-- LIDER TÉCNICO             :              
-- FECHAHORA                 : 2021/10/14
-- REALIZADO POR             : INFORMATICA & TECNOLOGIA (GEDV - JAPC)
--	                           Este componente fue realizado bajo la metodología de desarrollo de Informática & Tecnología 
--                             y se encuentra Protegido por las leyes de derechos de autor.
-- FECHAHORA MODIFICACIÓN    : 
-- LIDER MODIFICACIÓN        : 
-- REALIZADO POR             : 
-- OBJETIVO MODIFICACIÓN     : 
-----------------------------------------------------------------------------------------------------------------------------
*/

BEGIN
	DBMS_SERVICE.CREATE_SERVICE(
		SERVICE_NAME => '&SERVICENAME',
		NETWORK_NAME => '&NETWORKNAME'
	);
END;
/


BEGIN
	DBMS_SERVICE.START_SERVICE(
		SERVICE_NAME => '&SERVICENAME'
	);
END;
/

ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE;

---CREANDO ROL 
CREATE ROLE ROLQA_DESARCHIVE_CORE;

---OTORGANDO PERMISOS A LOS ROLES
GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE VIEW, CREATE TRIGGER, CREATE PROCEDURE TO ROLQA_DESARCHIVE_CORE;

---CREACION DE TABLESPACES

CREATE TABLESPACE ORCLQA_DESARCHIVE_CORE_DATA DATAFILE '&TABLESPACEDATA' SIZE 1000M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED;
CREATE TABLESPACE ORCLQA_DESARCHIVE_CORE_IDX  DATAFILE '&TABLESPACEIDX'  SIZE 1000M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED;

--CREACION DE USUARIOS
CREATE USER SCHQA_ORCL_DESARCHIVE_CORE IDENTIFIED BY "SCHQA_ORCL_DESARCHIVE_CORE"
DEFAULT TABLESPACE "ORCLQA_DESARCHIVE_CORE_DATA"
TEMPORARY TABLESPACE "TEMP"
QUOTA UNLIMITED ON "ORCLQA_DESARCHIVE_CORE_DATA";

---OTORGANDO PERMISOS A USUARIOS
GRANT ROLQA_DESARCHIVE_CORE TO SCHQA_ORCL_DESARCHIVE_CORE;


CREATE TABLE SCHQA_ORCL_DESARCHIVE_CORE.BODEGA (
    ID_BODEGA      NUMBER(19) NOT NULL,
    IDENTIFICACION NVARCHAR2(1000) NOT NULL,
    NOMBRE         NVARCHAR2(1000) NOT NULL,
    TELEFONO       NVARCHAR2(500) NOT NULL,
    DIRECCION      NVARCHAR2(1000) NOT NULL,
    ID_MUNICIPIO   NUMBER(19) NOT NULL,
    ES_ACTIVO      NUMBER(1) NOT NULL
);

CREATE UNIQUE INDEX SCHQA_ORCL_DESARCHIVE_CORE.IDX_IDENTIFICACION ON
    SCHQA_ORCL_DESARCHIVE_CORE.BODEGA (
        IDENTIFICACION
    ASC );

ALTER TABLE SCHQA_ORCL_DESARCHIVE_CORE.BODEGA ADD CONSTRAINT PK_BDG PRIMARY KEY ( ID_BODEGA );

CREATE TABLE SCHQA_ORCL_DESARCHIVE_CORE.JURISDICCION (
    ID_JURISDICCION NUMBER(19) NOT NULL,
    CODIGO          NUMBER NOT NULL,
    NOMBRE          NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO       NUMBER(1) NOT NULL
);

CREATE UNIQUE INDEX SCHQA_ORCL_DESARCHIVE_CORE.IDX_JDC_CODIGO ON
    SCHQA_ORCL_DESARCHIVE_CORE.JURISDICCION (
        ID_JURISDICCION
    ASC,
        CODIGO
    ASC );

ALTER TABLE SCHQA_ORCL_DESARCHIVE_CORE.JURISDICCION ADD CONSTRAINT PK_JDC PRIMARY KEY ( ID_JURISDICCION );

CREATE TABLE SCHQA_ORCL_DESARCHIVE_CORE.JURISDICCION_POR_BODEGA (
    ID_BODEGA       NUMBER(19) NOT NULL,
    ID_JURISDICCION NUMBER(19) NOT NULL
);

ALTER TABLE SCHQA_ORCL_DESARCHIVE_CORE.JURISDICCION_POR_BODEGA ADD CONSTRAINT PK_JXB PRIMARY KEY ( ID_BODEGA,
                                                                                                    ID_JURISDICCION );

CREATE TABLE SCHQA_ORCL_DESARCHIVE_CORE.USUARIO_POR_BODEGA (
    ID_USUARIO NUMBER(19) NOT NULL,
    ID_BODEGA  NUMBER(19) NOT NULL
);

ALTER TABLE SCHQA_ORCL_DESARCHIVE_CORE.USUARIO_POR_BODEGA ADD CONSTRAINT PK_USU_BDG PRIMARY KEY ( ID_USUARIO,
                                                                                                   ID_BODEGA );

ALTER TABLE SCHQA_ORCL_DESARCHIVE_CORE.JURISDICCION_POR_BODEGA
    ADD CONSTRAINT FK_BDG_JXB FOREIGN KEY ( ID_BODEGA )
        REFERENCES SCHQA_ORCL_DESARCHIVE_CORE.BODEGA ( ID_BODEGA );

ALTER TABLE SCHQA_ORCL_DESARCHIVE_CORE.JURISDICCION_POR_BODEGA
    ADD CONSTRAINT FK_JDC_JXB FOREIGN KEY ( ID_JURISDICCION )
        REFERENCES SCHQA_ORCL_DESARCHIVE_CORE.JURISDICCION ( ID_JURISDICCION );

CREATE SEQUENCE SCHQA_ORCL_DESARCHIVE_CORE.SEQ_BODEGA START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER SCHQA_ORCL_DESARCHIVE_CORE.TRG_BODEGA BEFORE
    INSERT ON SCHQA_ORCL_DESARCHIVE_CORE.BODEGA
    FOR EACH ROW
    WHEN ( NEW.ID_BODEGA IS NULL )
BEGIN
    :NEW.ID_BODEGA := SCHQA_ORCL_DESARCHIVE_CORE.SEQ_BODEGA.NEXTVAL;
END;
/

CREATE SEQUENCE SCHQA_ORCL_DESARCHIVE_CORE.seq_jurisdiccion START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER SCHQA_ORCL_DESARCHIVE_CORE.trg_jurisdiccion BEFORE
    INSERT ON SCHQA_ORCL_DESARCHIVE_CORE.jurisdiccion
    FOR EACH ROW
    WHEN ( new.id_jurisdiccion IS NULL )
BEGIN
    :new.id_jurisdiccion := SCHQA_ORCL_DESARCHIVE_CORE.seq_jurisdiccion.nextval;
END;
/



--- GENERACION DE PERMISOS
DECLARE
  V_ROL  VARCHAR2(4000);
  CURSOR C_PERMISOS
  IS 
    SELECT 'GRANT SELECT, INSERT, UPDATE, DELETE ON SCHQA_ORCL_DESARCHIVE_CORE.'||TABLE_NAME||' TO ' AS SENTENCIA
    FROM   USER_TABLES;
  R_PER C_PERMISOS%ROWTYPE;
BEGIN
  V_ROL := 'ROLQA_DESARCHIVE_CORE';
  
  OPEN C_PERMISOS;
  LOOP
    FETCH C_PERMISOS INTO R_PER;
    EXIT WHEN C_PERMISOS%NOTFOUND;
      EXECUTE IMMEDIATE R_PER.SENTENCIA||V_ROL;
  END LOOP;
  CLOSE C_PERMISOS;
EXCEPTION
  WHEN OTHERS THEN
    IF C_PERMISOS%ISOPEN THEN CLOSE C_PERMISOS; END IF;
END;