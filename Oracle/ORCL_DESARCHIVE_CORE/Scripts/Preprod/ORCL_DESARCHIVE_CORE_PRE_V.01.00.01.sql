/*
-------------------------------------------------------------------------------------------------------------------------------
-- OBJETIVO                  : CREACION DEL MODELO RELACIONAL BD DESARCHIVE SITIO WEB MODULO DESARCHIVE.
-- PARÁMETROS DE ENTRADA     : LA EJECUCIÓN DEL SCRIPT SOLICITA LOS SIGUIENTES PARAMETROS
								SERVICIO        : ORCL_DESARCHIVE_CORE_PRE
								SIZE_TABLESPACE : DEVOPS -> 10
								                  19C    -> 1000
												  21C    -> 1000
-- PARÁMETROS DE SALIDA      : NA   
-- OBJETOS QUE LO REFERENCIAN: NA
-- LIDER TÉCNICO             : GABRIEL EDUARDO DUARTE             
-- FECHAHORA                 : 2021/11/30
-- REALIZADO POR             : INFORMATICA & TECNOLOGIA (GEDV - JAPC)
--	                           ESTE COMPONENTE FUE REALIZADO BAJO LA METODOLOGÍA DE DESARROLLO DE INFORMÁTICA & TECNOLOGÍA 
--                             Y SE ENCUENTRA PROTEGIDO POR LAS LEYES DE DERECHOS DE AUTOR.
-- FECHAHORA MODIFICACIÓN    : 
-- LIDER MODIFICACIÓN        : 
-- REALIZADO POR             : 
-- OBJETIVO MODIFICACIÓN     : 
--                             
-----------------------------------------------------------------------------------------------------------------------------
*/
DECLARE
   V_CREASERVICIO   VARCHAR2(4000);
   V_INICIASERVICIO VARCHAR2(4000);
   V_SERVICIO       VARCHAR2(500);
   V_SIZE_TBL       NUMBER;
   V_CREATABLESDATA VARCHAR2(4000);
   V_CREATABLESIDX  VARCHAR2(4000);
   V_RUTA           VARCHAR2(500);
   V_RUTA_DATA      VARCHAR2(500);
   V_RUTA_IDX       VARCHAR2(500);
   V_CREA_USUARIO   VARCHAR2(500);
   V_USUARIO        VARCHAR2(500);
   V_CREA_ROL       VARCHAR2(500);   
   
BEGIN
    DELETE FROM AUDITORIA_OBJETOS;COMMIT;
	PROC_AUDITA_OBJETOS('DESARCHIVE','ORCL_DESARCHIVE_CORE_PRE','CREACION BD',NULL,NULL);
    V_SERVICIO := '&SERVICIO';
	V_SIZE_TBL := '&SIZE_TABLESPACE';
    --CREANDO SERVICIO
    V_CREASERVICIO := 'BEGIN
                          DBMS_SERVICE.CREATE_SERVICE(
                            SERVICE_NAME => :SERVICIO,
                            NETWORK_NAME => :SERVICIO);
                        END;';
    EXECUTE IMMEDIATE V_CREASERVICIO USING V_SERVICIO;                    
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA SERVICIO '||V_SERVICIO||' OK.',NULL,NULL);

    --INICIANDO SERVICIO
    V_INICIASERVICIO := ' BEGIN
                           DBMS_SERVICE.START_SERVICE(SERVICE_NAME => :SERVICIO);
                        END;';
    EXECUTE IMMEDIATE V_INICIASERVICIO USING V_SERVICIO;
    PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA SERVICIO '||V_SERVICIO||' OK.',NULL,NULL);
    
    EXECUTE IMMEDIATE 'CREATE ROLE ROL_DESARCHIVE_CORE_PRE';
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA ROL OK.',NULL,NULL);
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE VIEW, CREATE TRIGGER,CREATE PROCEDURE TO ROL_DESARCHIVE_CORE_PRE';
    PROC_AUDITA_OBJETOS(NULL,NULL,'OTORGA PERMISOS OK.',NULL,NULL);
    
    ---OBTENIENDO RUTA DE INSTALACION DEL MOTOR
    SELECT SUBSTR(FILE_NAME,1,INSTR(FILE_NAME,'\',-1))
    INTO   V_RUTA
    FROM   DBA_DATA_FILES
    WHERE  ROWNUM = 1;

    ---CREANDO TABLESPACEDATA
    V_RUTA_DATA      := V_RUTA||V_SERVICIO||'_DATA.DBF';
    V_CREATABLESDATA := 'CREATE TABLESPACE '||V_SERVICIO||'_DATA DATAFILE '''||V_RUTA_DATA||''' SIZE '||V_SIZE_TBL||'M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED';
    EXECUTE IMMEDIATE V_CREATABLESDATA;
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA TABLESPACE DATA '||V_RUTA_DATA||' OK...',NULL,NULL);

    ---CREANDO TABLESPACE IDX
    V_RUTA_IDX      := V_RUTA||V_SERVICIO||'_IDX.DBF';
    V_CREATABLESIDX := 'CREATE TABLESPACE '||V_SERVICIO||'_IDX  DATAFILE '''||V_RUTA_IDX||''' SIZE '||V_SIZE_TBL||'M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED';
    EXECUTE IMMEDIATE V_CREATABLESIDX;
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA TABLESPACE IDX '||V_RUTA_IDX||' OK...',NULL,NULL);

    ---CREANDO USUARIO
    V_USUARIO := 'SCH_'||V_SERVICIO;
    V_CREA_USUARIO := '
                    CREATE USER '||V_USUARIO||' IDENTIFIED BY '||V_USUARIO||'
                    DEFAULT TABLESPACE '||V_SERVICIO||'_DATA
                    TEMPORARY TABLESPACE TEMP
                    QUOTA UNLIMITED ON '||V_SERVICIO||'_DATA';
    EXECUTE IMMEDIATE V_CREA_USUARIO;   
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA USUARIO '||V_USUARIO||' OK...',NULL,NULL);

    ---OTORGANDO PERMISOS AL USUARIO
    EXECUTE IMMEDIATE 'GRANT ROL_DESARCHIVE_CORE_PRE TO '||V_USUARIO;
    PROC_AUDITA_OBJETOS(NULL,NULL,'OTORTANDO PERMISOS ROL, OK...',NULL,NULL);
    PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA CREACION OBJETOS BD ....',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR DURANTE INSTALACION BD',SQLCODE,SQLERRM);
END;
/

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA (
    ID_BODEGA     NUMBER(38) NOT NULL,
    CODIGO        NVARCHAR2(1000) NOT NULL,
    NOMBRE        NVARCHAR2(1000) NOT NULL,
    TELEFONO      NVARCHAR2(500) NOT NULL,
    DIRECCION     NVARCHAR2(1000) NOT NULL,
    COD_MUNICIPIO NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO     NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS BODEGAS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA.ID_BODEGA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA.TELEFONO IS
    'CAMPO QUE ALMACENA EL TELÉFONO DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA.DIRECCION IS
    'CAMPO QUE ALMACENA LA DIRECCIÓN DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA.COD_MUNICIPIO IS
    'CAMPO QUE ALMACENA EL CÓDIGO DEL MUNICIPIO DONDE SE ENCUENTRA UBICADA LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE LA BODEGA.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_IDENTIFICACIONV2 ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA ADD CONSTRAINT PK_BDG PRIMARY KEY ( ID_BODEGA );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ (
    ID_DETALLE_BOD_PAQ     NUMBER(38) NOT NULL,
    FECHA_SELECCION_BODEGA DATE NOT NULL,
    ID_BODEGA              NUMBER(38) NOT NULL,
    ID_DETALLE_PAQUETE     NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS DETALLES DE PAQUETE, DEL REPARTO POR BODEGA DE LAS SOLICITUDES DE DESARCHIVE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ.ID_DETALLE_BOD_PAQ IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL DETALLE BODEGA PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ.FECHA_SELECCION_BODEGA IS
    'CAMPO QUE ALMACENA LA FECHA DE SELECCIÓN DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ.ID_BODEGA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ.ID_DETALLE_PAQUETE IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL DETALLE PAQUETE.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ ADD CONSTRAINT PK_DBP PRIMARY KEY ( ID_DETALLE_BOD_PAQ );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE (
    ID_DETALLE_PAQUETE NUMBER(38) NOT NULL,
    ANIO_PAQUETE       NVARCHAR2(2000),
    NUMERO_PAQUETE     NVARCHAR2(2000),
    ID_SOLICITUD_DES   NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS DETALLES DE LOS PAQUETES, REFERENTES A LOS PROCESOS QUE SE VAN A DESARCHIVAR.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE.ID_DETALLE_PAQUETE IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL DETALLE DE PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE.ANIO_PAQUETE IS
    'CAMPO QUE ALMACENA EL AÑO DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE.NUMERO_PAQUETE IS
    'CAMPO QUE ALMACENA EL NÚMERO DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE.ID_SOLICITUD_DES IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA SOLICITUD DE DESARCHIVE, AL CUAL PERTENECE EL PAQUETE.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE ADD CONSTRAINT PK_DPQ PRIMARY KEY ( ID_DETALLE_PAQUETE );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ (
    ID_DETALLE_PROF_BOD_PAQ  NUMBER(38) NOT NULL,
    FECHA_SELECCION_PROF_BOD DATE NOT NULL,
    ID_PROFESIONAL_BODEGA    NUMBER(38) NOT NULL,
    ID_DETALLE_BOD_PAQ       NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS DETALLES DE PAQUETE, DEL REPARTO POR PROFESIONAL Y BODEGA DE LAS SOLICITUDES DE DESARCHIVE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ.ID_DETALLE_PROF_BOD_PAQ IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL DETALLE PROFESIONAL BODEGA PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ.FECHA_SELECCION_PROF_BOD IS
    'CAMPO QUE ALMACENA LA FECHA DE SELECCIÓN DEL PROFESIONAL DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ.ID_PROFESIONAL_BODEGA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL PROFESIONAL DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ.ID_DETALLE_BOD_PAQ IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL DETALLE BODEGA PAQUETE.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ ADD CONSTRAINT PK_DPB PRIMARY KEY ( ID_DETALLE_PROF_BOD_PAQ );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESP_X_TIPO_PROCESO (
    ID_TIPO_PROCESO         NUMBER(38) NOT NULL,
    ID_ESPECIALIDAD         NUMBER(38) NOT NULL,
    REQUIERE_PAGO			NUMBER(1) NOT NULL,
    ES_VISIBLE_SITIO_WEB    NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESP_X_TIPO_PROCESO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS ESPECIALIDADES POR TIPO DE PROCESO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESP_X_TIPO_PROCESO.ID_TIPO_PROCESO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL TIPO DE PROCESO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESP_X_TIPO_PROCESO.ID_ESPECIALIDAD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA ESPECIALIDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESP_X_TIPO_PROCESO.REQUIERE_PAGO_SITIO_WEB IS
    'CAMPO QUE ALMACENA SI EL TIPO DE PROCESO SI REQUIERE O NO PAGO EN EL SITIO WEB.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESP_X_TIPO_PROCESO.ES_VISIBLE_SITIO_WEB IS
    'CAMPO QUE ALMACENA SI EL TIPO DE PROCESO ES VISIBLE O NO VISBLE EN EL SITIO WEB.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESP_X_TIPO_PROCESO ADD CONSTRAINT PK_EXT PRIMARY KEY ( ID_ESPECIALIDAD,
                                                                                                ID_TIPO_PROCESO );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD (
    ID_ESPECIALIDAD NUMBER(38) NOT NULL,
    CODIGO          NVARCHAR2(2000) NOT NULL,
    NOMBRE          NVARCHAR2(30) NOT NULL,
    ES_ACTIVO       NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS ESPECIALIDADES.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD.ID_ESPECIALIDAD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE LA ESPECIALIDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO DE LA ESPECIALIDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DE LA ESPECIALIDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE LA ESPECIALIDAD.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_CODIGO_ESPECIALIDAD ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD ADD CONSTRAINT PK_ESP PRIMARY KEY ( ID_ESPECIALIDAD );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD_X_JUZGADO (
    ID_ESPECIALIDAD NUMBER(38) NOT NULL,
    ID_JUZGADO      NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD_X_JUZGADO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS ESPECIALIDADES POR JUZGADO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD_X_JUZGADO.ID_ESPECIALIDAD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA ESPECIALIDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD_X_JUZGADO.ID_JUZGADO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL JUZGADO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD_X_JUZGADO ADD CONSTRAINT PK_EXJ PRIMARY KEY ( ID_ESPECIALIDAD,
                                                                                                    ID_JUZGADO );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD (
    ID_ESTADO_NOVEDAD NUMBER(38) NOT NULL,
    CODIGO            NVARCHAR2(1000) NOT NULL,
    NOMBRE            NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO         NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS ESTADOS DE LAS NOVEDADES.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD.ID_ESTADO_NOVEDAD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL ESTADO DE LA NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO DEL ESTADO DE LA NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL ESTADO DE LA NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL ESTADO DE LA NOVEDAD.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_ESTADO_NOVEDAD ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD ADD CONSTRAINT PK_ENO PRIMARY KEY ( ID_ESTADO_NOVEDAD );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE (
    ID_ESTADO_PAQUETE NUMBER(38) NOT NULL,
    CODIGO            NVARCHAR2(1000) NOT NULL,
    NOMBRE            NVARCHAR2(2000) NOT NULL,
    ES_ACTIVO         NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS ESTADOS DE PAQUETE ARCHIVADOS EN LAS BODEGAS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE.ID_ESTADO_PAQUETE IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL ESTADO DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO DEL ESTADO DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL ESTADO DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL ESTADO DEL PAQUETE.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_ESTADO_PAQUETE ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE ADD CONSTRAINT PK_EPQ PRIMARY KEY ( ID_ESTADO_PAQUETE );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOL_X_ROL (
    ID_ESTADO_SOL_X_ROL NUMBER(38) NOT NULL,
    ID_ESTADO_SOLICITUD NUMBER(38) NOT NULL,
    CODIGO_ROL          NVARCHAR2(2000) NOT NULL,
    ES_ACTIVO           NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOL_X_ROL IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS ESTADOS DE SOLICITUD DE DESARCHIVE POR ROL DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOL_X_ROL.ID_ESTADO_SOL_X_ROL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL ESTADO DE SOLICITUD POR ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOL_X_ROL.ID_ESTADO_SOLICITUD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE ESTADO DE SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOL_X_ROL.CODIGO_ROL IS
    'CAMPO QUE ALMACENA EL CÓDIGO DEL ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOL_X_ROL.ES_ACTIVO IS
    ' CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL ESTADO DE SOLICITUD POR ROL.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOL_X_ROL ADD CONSTRAINT PK_EXR PRIMARY KEY ( ID_ESTADO_SOL_X_ROL );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD (
    ID_ESTADO_SOLICITUD NUMBER(38) NOT NULL,
    CODIGO              NVARCHAR2(1000) NOT NULL,
    NOMBRE              NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO           NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS ESTADOS DE SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD.ID_ESTADO_SOLICITUD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL ESTADO DE SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO DEL ESTADO DE SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL ESTADO DE SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL ESTADO DE LA SOLICITUD.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_ESTADO_SOLICITUD ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD ADD CONSTRAINT PK_ESS PRIMARY KEY ( ID_ESTADO_SOLICITUD );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL (
    ID_GESTOR_PROCESAL         NUMBER(38) NOT NULL,
    CODIGO_TIPO_IDENTIFICACION NVARCHAR2(1000) NOT NULL,
    NUMERO_IDENTIFICACION      NVARCHAR2(2000) NOT NULL,
    PRIMER_NOMBRE              NVARCHAR2(1000),
    SEGUNDO_NOMBRE             NVARCHAR2(1000),
    PRIMER_APELLIDO            NVARCHAR2(1000),
    SEGUNDO_APELLIDO           NVARCHAR2(1000),
    EMAIL                      NVARCHAR2(2000) NOT NULL,
    RAZON_SOCIAL               NVARCHAR2(2000),
    ID_USUARIO                 NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS GESTORES PROCESALES.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.ID_GESTOR_PROCESAL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.CODIGO_TIPO_IDENTIFICACION IS
    'CAMPO QUE ALMACENA EL TIPO DE  IDENTIFICACIÓN DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.NUMERO_IDENTIFICACION IS
    'CAMPO QUE ALMACENA EL NÚMERO DE  IDENTIFICACIÓN DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.PRIMER_NOMBRE IS
    'CAMPO QUE ALMACENA EL PRIMER NOMBRE DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.SEGUNDO_NOMBRE IS
    'CAMPO QUE ALMACENA EL SEGUNDO NOMBRE DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.PRIMER_APELLIDO IS
    'CAMPO QUE ALMACENA EL PRIMER APELLIDO DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.SEGUNDO_APELLIDO IS
    'CAMPO QUE ALMACENA EL SEGUNDO APELLIDO DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.EMAIL IS
    'CAMPO QUE ALMACENA EL CORREO ELECTRÓNICO DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.RAZON_SOCIAL IS
    'CAMPO QUE ALMACENA LA RAZÓN SOCIAL DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL.ID_USUARIO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL USUARIO DEL GESTOR PROCESAL.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL ADD CONSTRAINT PK_GEP PRIMARY KEY ( ID_GESTOR_PROCESAL );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL_X_JUZGADO (
    ID_GESTOR_PROCESAL NUMBER(38) NOT NULL,
    ID_JUZGADO         NUMBER(38) NOT NULL
);

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL_X_JUZGADO.ID_GESTOR_PROCESAL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL GESTOR PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL_X_JUZGADO.ID_JUZGADO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL JUZGADO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL_X_JUZGADO ADD CONSTRAINT PK_GXJ PRIMARY KEY ( ID_GESTOR_PROCESAL,
                                                                                                       ID_JUZGADO );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ (
    ID_HIST_DETALLE_BOD_PAQ NUMBER(38) NOT NULL,
    FECHA_MODIFICACION      DATE NOT NULL,
    FECHA_SELECCION_BODEGA  DATE NOT NULL,
    ID_BODEGA               NUMBER(38) NOT NULL,
    ID_DETALLE_BOD_PAQ      NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DEL HISTÓRICO DE LOS DETALLES DE PAQUETE, DEL REPARTO POR BODEGA DE LAS SOLICITUDES DE DESARCHIVE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ.ID_HIST_DETALLE_BOD_PAQ IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL HISTÓRICO DETALLE BODEGA PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ.FECHA_MODIFICACION IS
    'CAMPO QUE ALMACENA LA FECHA DE MODIFICACIÓN DEL REGISTRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ.FECHA_SELECCION_BODEGA IS
    'CAMPO QUE ALMACENA LA FECHA DE SELECCIÓN DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ.ID_BODEGA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ.ID_DETALLE_BOD_PAQ IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL DETALLE BODEGA PAQUETE.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ ADD CONSTRAINT PK_HDB PRIMARY KEY ( ID_HIST_DETALLE_BOD_PAQ );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ (
    ID_HIST_DETALLE_PROF_BOD_PAQ NUMBER(38) NOT NULL,
    FECHA_MODIFICACION           DATE NOT NULL,
    FECHA_SELECCION_PROF_BOD     DATE NOT NULL,
    ID_PROFESIONAL_BODEGA        NUMBER(38) NOT NULL,
    ID_DETALLE_PROF_BOD_PAQ      NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DEL HISTÓRICO DE LOS DETALLES DE PAQUETE, DEL REPARTO POR PROFESIONAL Y BODEGA DE LAS SOLICITUDES DE DESARCHIVE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ.ID_HIST_DETALLE_PROF_BOD_PAQ IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL HISTÓRICO DEL DETALLE DEL PROFESIONAL BODEGA PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ.FECHA_MODIFICACION IS
    'CAMPO QUE ALMACENA LA FECHA DE MODIFICACIÓN DEL REGISTRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ.FECHA_SELECCION_PROF_BOD IS
    'CAMPO QUE ALMACENA LA FECHA DE SELECCIÓN DEL PROFESIONAL DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ.ID_PROFESIONAL_BODEGA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL PROFESIONAL DE LA BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ.ID_DETALLE_PROF_BOD_PAQ IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL DETALLE BODEGA PAQUETE.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ ADD CONSTRAINT PK_HDP PRIMARY KEY ( ID_HIST_DETALLE_PROF_BOD_PAQ );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA (
    ID_HIST_EST_SOL_X_INCIDENCIA NUMBER(38) NOT NULL,
    ID_INCIDENCIA                NUMBER(38) NOT NULL,
    ID_HIST_ESTADO_SOLICITUD     NUMBER(38) NOT NULL,
    FECHA_SOLUCION               DATE,
    ES_ACTIVO                    NUMBER(38) NOT NULL
);

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA.ID_HIST_EST_SOL_X_INCIDENCIA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL HISTORICO ESTADO SOLICITUD POR INCIDENCIA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA.ID_INCIDENCIA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA INCIDENCIA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA.ID_HIST_ESTADO_SOLICITUD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL HISTÓRICO DEL ESTADO DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA.FECHA_SOLUCION IS
    'CAMPO QUE ALMACENA LA FECHA DE SOLUCIÓN DE LA INCIDENCIA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE LA INCIDENCIA, REFERENTE A LA SOLICITUD DE DESARCHIVE.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA ADD CONSTRAINT PK_HXI PRIMARY KEY ( ID_HIST_EST_SOL_X_INCIDENCIA );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD (
    ID_HIST_ESTADO_SOLICITUD NUMBER(38) NOT NULL,
    FECHA_ULTIMA_MOD         DATE NOT NULL,
    OBSERVACIONES            NVARCHAR2(2000),
    ID_SOLICITUD_DES         NUMBER(38) NOT NULL,
    "ID_ESTADO_SOLICITUD "   NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DEL HISTÓRICO DE LAS MODIFICACIONES REALIZADOS A LOS ESTADOS DE LA SOLICITUDES DE DESARCHIVE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD.ID_HIST_ESTADO_SOLICITUD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL HISTÓRICO DEL ESTADO DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD.FECHA_ULTIMA_MOD IS
    'CAMPO QUE ALMACENA LA ÚLTIMA FECHA DE ACTUALIZACIÓN DEL ESTADO DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD.OBSERVACIONES IS
    'CAMPO QUE ALMACENA LAS OBSERVACIONES AL CAMBIO DEL ESTADO DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD.ID_SOLICITUD_DES IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD."ID_ESTADO_SOLICITUD " IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL ESTADO DE LA SOLICITUD.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD ADD CONSTRAINT PK_HES PRIMARY KEY ( ID_HIST_ESTADO_SOLICITUD );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA (
    ID_HISTORICO_TARIFA NUMBER(38) NOT NULL,
    CODIGO              NVARCHAR2(1000) NOT NULL,
    NOMBRE              NVARCHAR2(2000) NOT NULL,
    VALOR               NUMBER(38, 4) NOT NULL,
    FECHA_ACTUALIZACION DATE NOT NULL,
    ES_ACTIVO           NUMBER(1) NOT NULL,
    ID_TARIFA           NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA IS
    'TABLA QUE ALMACENA EL HISTÓRICO DE LAS TARIFAS APLICADAS EN EL DESARCHIVE DE LOS PROCESOS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA.ID_HISTORICO_TARIFA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL HISTÓRICO DE TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO DE LA TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DE LA TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA.VALOR IS
    'CAMPO QUE ALMACENA EL VALOR DE LA TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA.FECHA_ACTUALIZACION IS
    'CAMPO QUE ALMACENA LA FECHA DE ACTUALIZACIÓN DE LA TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE LA TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA.ID_TARIFA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA TARIFA.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA ADD CONSTRAINT PK_HTF PRIMARY KEY ( ID_HISTORICO_TARIFA );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA (
    ID_INCIDENCIA NUMBER(38) NOT NULL,
    CODIGO        NVARCHAR2(2000) NOT NULL,
    DESCRIPCION   NVARCHAR2(2000) NOT NULL,
    ES_ACTIVO     NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS INCIDENCIAS OCURRENTES POR LOS CAMBIOS DE ESTADO U OTROS EVENTOS EN EL PROCESO DE DESARCHIVE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA.ID_INCIDENCIA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE LA INCIDENCIA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO DE LA INCIDENCIA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA.DESCRIPCION IS
    'CAMPO QUE ALMACENA LA DESCRIPCIÓN DE LA INCIDENCIA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE LA INCIDENCIA.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_INCIDENCIA ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA ADD CONSTRAINT PK_IDA PRIMARY KEY ( ID_INCIDENCIA );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO (
    ID_JUZGADO    NUMBER(38) NOT NULL,
    CODIGO        NVARCHAR2(2000) NOT NULL,
    NOMBRE        NVARCHAR2(1000) NOT NULL,
    COD_MUNICIPIO NUMBER(38) NOT NULL,
    ES_ACTIVO     NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DEL JUZGADO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO.ID_JUZGADO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL JUZGADO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO DEL JUZGADO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL JUZGADO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO.COD_MUNICIPIO IS
    'CAMPO QUE ALMACENA EL CÓDIGO DEL MUNICIPIO AL CUAL PERTENECE EL JUZGADO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL JUZGADO.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_JUZGADO ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO ADD CONSTRAINT PK_JUZ PRIMARY KEY ( ID_JUZGADO );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD (
    ID_NOVEDAD        NUMBER(38) NOT NULL,
    FECHA_INICIO      DATE NOT NULL,
    FECHA_FIN         DATE NOT NULL,
    OBSERVACION       NVARCHAR2(2000),
    ID_ESTADO_NOVEDAD NUMBER(38) NOT NULL,
    ID_TIPO_NOVEDAD   NUMBER(38) NOT NULL,
    ID_USUARIO        NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS NOVEDADES.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD.ID_NOVEDAD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE LA NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD.FECHA_INICIO IS
    'CAMPO QUE ALMACENA LA FECHA DE INICIO DE LA NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD.FECHA_FIN IS
    'CAMPO QUE ALMACENA LA FECHA DE FINALIZACIÓN DE LA NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD.OBSERVACION IS
    'CAMPO QUE ALMACENA LAS OBSERVACIONES REFERENTES A LA NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD.ID_ESTADO_NOVEDAD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL ESTADO DE LA NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD.ID_TIPO_NOVEDAD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL TIPO DE NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD.ID_USUARIO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL USUARIO AL CUAL SE REGISTRA LA NOVEDAD.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD ADD CONSTRAINT PK_NOV PRIMARY KEY ( ID_NOVEDAD );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE (
    ID_PAQUETE        NUMBER(38) NOT NULL,
    BLOQUE            NVARCHAR2(1000),
    ZONA              NVARCHAR2(1000),
    PISO              NVARCHAR2(1000),
    PASILLO           NVARCHAR2(1000),
    COSTADO           NVARCHAR2(1000),
    ESTANTE           NVARCHAR2(1000),
    ANAQUEL           NVARCHAR2(1000),
    NUMERO_PAQUETE    NUMBER(38),
    PROCESO           NVARCHAR2(2000),
    ANIO_PAQUETE      NUMBER(38),
    OBSERVACION       NVARCHAR2(2000),
    DEMANDANTE        NVARCHAR2(2000),
    DEMANDADO         NVARCHAR2(2000),
    ID_JUZGADO        NUMBER(38) NOT NULL,
    ID_ESTADO_PAQUETE NUMBER(38) NOT NULL,
    ID_BODEGA         NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS PAQUETES EXISTENTES EN LAS BODEGAS (INVENTARIO).';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.ID_PAQUETE IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.BLOQUE IS
    'CAMPO QUE ALMACENA EL BLOQUE DONDE SE ENCUENTRA UBICADO EL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.ZONA IS
    'CAMPO QUE ALMACENA LA ZONA DONDE SE ENCUENTRA UBICADO EL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.PISO IS
    'CAMPO QUE ALMACENA EL PISO DONDE SE ENCUENTRA UBICADO EL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.PASILLO IS
    'CAMPO QUE ALMACENA EL PASILLO DONDE SE ENCUENTRA UBICADO EL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.COSTADO IS
    'CAMPO QUE ALMACENA EL COSTADO DONDE SE ENCUENTRA UBICADO EL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.ESTANTE IS
    'CAMPO QUE ALMACENA EL ESTANTE DONDE SE ENCUENTRA UBICADO EL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.ANAQUEL IS
    'CAMPO QUE ALMACENA EL ANAQUEL DONDE SE ENCUENTRA UBICADO EL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.NUMERO_PAQUETE IS
    'CAMPO QUE ALMACENA EL NÚMERO DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.PROCESO IS
    'CAMPO QUE ALMACENA EL PROCESO CONTENIDO EN EL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.ANIO_PAQUETE IS
    'CAMPO QUE ALMACENA EL AÑO DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.OBSERVACION IS
    'CAMPO QUE ALMACENA LAS OBSERVACIONES REFERENTES AL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.DEMANDANTE IS
    'CAMPO QUE ALMACENA EL DEMANDANTE DEL PROCESO QUE HACE PARTE DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.DEMANDADO IS
    'CAMPO QUE ALMACENA EL DEMANDADO DEL PROCESO QUE HACE PARTE DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.ID_JUZGADO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL JUZGADO AL CUAL PERTENECE EL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.ID_ESTADO_PAQUETE IS
    'CAMPO QUE ALMACENA EL ESTADO DEL PAQUETE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE.ID_BODEGA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA BODEGA DONDE SE ENCUENTRA UBIDADO EL PAQUETE.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE ADD CONSTRAINT PK_PAQ PRIMARY KEY ( ID_PAQUETE );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT (
    ID_PARAM_SWEB_EXT         NUMBER(38) NOT NULL,
    CODIGO                    NVARCHAR2(2000) NOT NULL,
    NOMBRE                    NVARCHAR2(1000) NOT NULL,
    VALOR                     NVARCHAR2(2000) NOT NULL,
    FECHA_ULTIMA_MODIFICACION DATE NOT NULL,
    ES_ACTIVO                 NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS PARÁMETROS DEL SITIO WEB QUE ATIENDE LAS SOLICITUDES DE DESARCHIVE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT.ID_PARAM_SWEB_EXT IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT.VALOR IS
    'CAMPO QUE ALMACENA EL VALOR DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT.FECHA_ULTIMA_MODIFICACION IS
    'CAMPO QUE ALMACENA LA FECHA DE LA ÚLTIMA MODIFICACIÓN DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL PARÁMETRO.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_PARAM_SWEB_EXT ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT ADD CONSTRAINT PK_PSW PRIMARY KEY ( ID_PARAM_SWEB_EXT );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO (
    ID_PARAMETRO     NUMBER(38) NOT NULL,
    CODIGO           NVARCHAR2(1000) NOT NULL,
    DESCRIPCION      NVARCHAR2(2000) NOT NULL,
    VALOR            NVARCHAR2(1000) NOT NULL,
    ID_PROCEDIMIENTO NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS PARÁMETROS UTILIZADOS EN LA APLICACIÓN.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO.ID_PARAMETRO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO.CODIGO IS
    ' CAMPO QUE ALMACENA EL CÓDIGO ÚNICO DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO.DESCRIPCION IS
    'CAMPO QUE ALMACENA LA DESCRIPCIÓN DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO.VALOR IS
    'CAMPO QUE ALMACENA EL VALOR DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO.ID_PROCEDIMIENTO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL PROCEDIMIENTO AL CUAL PERTENECE EL PARÁMETRO.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_PARAMETRO ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO ADD CONSTRAINT PK_PRM PRIMARY KEY ( ID_PARAMETRO );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO (
    ID_PROCEDIMIENTO NUMBER(38) NOT NULL,
    CODIGO           NVARCHAR2(1000) NOT NULL,
    NOMBRE           NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO        NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS PROCEDIMIENTOS O SISTEMAS QUE TIENEN PARÁMETROS PARA SU FUNCIONAMIENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO.ID_PROCEDIMIENTO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE PROCEDIMIENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO POR CADA PROCEDIMIENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL PROCEDIMIENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL PROCEDIMENTO.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_PROCEDIMIENTO ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO ADD CONSTRAINT PK_PRC PRIMARY KEY ( ID_PROCEDIMIENTO );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA (
    ID_PROFESIONAL_BODEGA NUMBER(38) NOT NULL,
    ID_USUARIO            NUMBER(38) NOT NULL,
    ES_ACTIVO             NUMBER(1) NOT NULL,
    ID_BODEGA             NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS PROFESIONALES POR BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA.ID_PROFESIONAL_BODEGA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL PROFESIONAL POR BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA.ID_USUARIO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL PROFESIONAL POR BODEGA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA.ID_BODEGA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA BODEGA.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA ADD CONSTRAINT PK_PBD PRIMARY KEY ( ID_PROFESIONAL_BODEGA );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES (
    ID_SOLICITUD_DES           NUMBER(38) NOT NULL,
    CODIGO_TIPO_IDENTIFICACION NVARCHAR2(2000) NOT NULL,
    NUMERO_IDENTIFICACION      NVARCHAR2(1000) NOT NULL,
    PRIMER_NOMBRE              NVARCHAR2(1000),
    SEGUNDO_NOMBRE             NVARCHAR2(1000),
    PRIMER_APELLIDO            NVARCHAR2(1000),
    SEGUNDO_APELLIDO           NVARCHAR2(1000),
    NOMBRES_APELLIDOS          NVARCHAR2(2000),
    RAZON_SOCIAL               NVARCHAR2(2000),
    TELEFONO                   NVARCHAR2(1000) NOT NULL,
    CORREO_NOTIFICACION        NVARCHAR2(1000) NOT NULL,
    ID_TIPO_PERSONA            NUMBER(38) NOT NULL,
    ANIO_PROCESO               NUMBER(38) NOT NULL,
    NUMERO_PROCESO             NUMBER(38) NOT NULL,
    COD_MUNICIPIO              NVARCHAR2(1000) NOT NULL,
    CUI                        NUMBER(38) NOT NULL,
    ID_ESTADO_SOLICITUD        NUMBER(38) NOT NULL,
    ID_TIPO_SOLICITUD          NUMBER(38) NOT NULL,
    ID_TIPO_PROCESO            NUMBER(38) NOT NULL,
    ID_JUZGADO                 NUMBER(38) NOT NULL,
    ID_ESPECIALIDAD            NUMBER(38) NOT NULL,
    OBSERVACIONES              NVARCHAR2(1)
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS SOLICITUDES DE DESARCHIVE, REALIZADAS POR LOS USUARIOS';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.ID_SOLICITUD_DES IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.CODIGO_TIPO_IDENTIFICACION IS
    'CAMPO QUE ALMACENA EL CÓDIGO DEL TIPO DE IDENTIFICACIÓN DEL USUARIO QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.NUMERO_IDENTIFICACION IS
    'CAMPO QUE ALMACENA EL NÚMERO DE IDENTIFICACIÓN DEL USUARIO QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.PRIMER_NOMBRE IS
    'CAMPO QUE ALMACENA EL PRIMER NOMBRE DEL USUARIO QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.SEGUNDO_NOMBRE IS
    'CAMPO QUE ALMACENA EL SEGUNDO NOMBRE DEL USUARIO QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.PRIMER_APELLIDO IS
    'CAMPO QUE ALMACENA EL PRIMER APELLIDO DEL USUARIO QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.SEGUNDO_APELLIDO IS
    'CAMPO QUE ALMACENA EL SEGUNDO APELLIDO DEL USUARIO QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.NOMBRES_APELLIDOS IS
    'CAMPO QUE ALMACENA EL NOMBRE COMPLETO DEL USUARIO QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.TELEFONO IS
    'CAMPO QUE ALMACENA EL TELÉFONO DEL USUARIO QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.CORREO_NOTIFICACION IS
    'CAMPO QUE ALMACENA EL CORREO ELECTRÓNICO DEL USUARIO QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.ID_TIPO_PERSONA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE TIPO DE PERSONA QUIEN REALIZA LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.ANIO_PROCESO IS
    'CAMPO QUE ALMACENA EL AÑO DEL PROCESO DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.NUMERO_PROCESO IS
    'CAMPO QUE ALMACENA EL NÚMERO DEL PROCESO DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.COD_MUNICIPIO IS
    'CAMPO QUE ALMACENA EL CÓDIGO DEL MUNICIPIO DEL PROCESO DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.CUI IS
    'CAMPO QUE ALMACENA EL NÚMERO DE PROCESO JUDICIAL (CUI) DE LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.ID_ESTADO_SOLICITUD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL ESTADO LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.ID_TIPO_SOLICITUD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL TIPO DE  LA SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.ID_TIPO_PROCESO IS
    'CAMPO QUE ALMACENAEL IDENTIFICADOR DEL TIPO DE PROCESO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.ID_JUZGADO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL JUZGADO AL CUAL PERTENECE EL PROCESO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.ID_ESPECIALIDAD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA ESPECIALIDAD AL CUAL PERTENECE EL PROCESO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES.OBSERVACIONES IS
    'CAMPO QUE ALMACENA LAS OBSERVACIONES DE LA SOLICITUD.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES ADD CONSTRAINT PK_SLC PRIMARY KEY ( ID_SOLICITUD_DES );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PRO_X_SOLICITUD_DES (
    ID_SUJETO_PROCESAL NUMBER(38) NOT NULL,
    ID_SOLICITUD_DES   NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PRO_X_SOLICITUD_DES IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS SUJETOS PROCESALES POR SOLICITUD DE DESARCHIVE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PRO_X_SOLICITUD_DES.ID_SUJETO_PROCESAL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PRO_X_SOLICITUD_DES.ID_SOLICITUD_DES IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE LA SOLICITUD DE DESARCHIVE.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PRO_X_SOLICITUD_DES ADD CONSTRAINT PK_SXS PRIMARY KEY ( ID_SUJETO_PROCESAL,
                                                                                                        ID_SOLICITUD_DES );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL (
    ID_SUJETO_PROCESAL         NUMBER(38) NOT NULL,
    CODIGO_TIPO_IDENTIFICACION NVARCHAR2(2000),
    NUMERO_IDENTIFICACION      NVARCHAR2(1000),
    PRIMER_NOMBRE              NVARCHAR2(1000),
    SEGUNDO_NOMBRE             NVARCHAR2(1000),
    PRIMER_APELLIDO            NVARCHAR2(1000),
    SEGUNDO_APELLIDO           NVARCHAR2(1000),
    NOMBRES_APELLIDOS          NVARCHAR2(2000),
    RAZON_SOCIAL               NVARCHAR2(2000),
    ID_TIPO_PERSONA            NUMBER(38) NOT NULL,
    ID_TIPO_SUJETO_PROCESAL    NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS SUJETOS PROCESALES.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.ID_SUJETO_PROCESAL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.CODIGO_TIPO_IDENTIFICACION IS
    'CAMPO QUE ALMACENA EL CÓDIGO DEL TIPO DE IDENTIFICACIÓN DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.NUMERO_IDENTIFICACION IS
    'CAMPO QUE ALMACENA EL NÚMERO DE IDENTIFICACIÓN DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.PRIMER_NOMBRE IS
    'CAMPO QUE ALMACENA EL PRIMER NOMBRE DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.SEGUNDO_NOMBRE IS
    'CAMPO QUE ALMACENA EL SEGUNDO NOMBRE DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.PRIMER_APELLIDO IS
    'CAMPO QUE ALMACENA EL PRIMER APELLIDO DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.SEGUNDO_APELLIDO IS
    'CAMPO QUE ALMACENA EL SEGUNDO APELLIDO DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.NOMBRES_APELLIDOS IS
    'CAMPO QUE ALMACENA EL NOMBRE COMPLETO DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.CODIGO_TIPO_SUJ_PROCESAL IS
    'CAMPO QUE ALMACENA EL CÓDIGO DEL TIPO DE SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.RAZON_SOCIAL IS
    'CAMPO QUE ALMACENA LA RAZÓN SOCIAL DEL SUJETO PROCESAL  (PARA EL CASO DE PERSONA JURÍDICA).';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.ID_TIPO_PERSONA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE TIPO DE PERSONA DEL SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL.ID_TIPO_SUJETO_PROCESAL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE TIPO DE SUJETO PROCESAL DEL SUJETO PROCESAL.';

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL ADD CONSTRAINT PK_SPR PRIMARY KEY ( ID_SUJETO_PROCESAL );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA (
    ID_TARIFA NUMBER(38) NOT NULL,
    CODIGO    NVARCHAR2(1000) NOT NULL,
    NOMBRE    NVARCHAR2(2000) NOT NULL,
    VALOR     NUMBER(38, 4) NOT NULL,
    ES_ACTIVO NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS TARIFAS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA.ID_TARIFA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE LA TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO DE LA TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DE LA TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA.VALOR IS
    'CAMPO QUE ALMACENA EL VALOR DE LA TARIFA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE LA TARIFA.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_TARIFA ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA ADD CONSTRAINT PK_TRA PRIMARY KEY ( ID_TARIFA );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD (
    ID_TIPO_NOVEDAD NUMBER(38) NOT NULL,
    CODIGO          NVARCHAR2(1000) NOT NULL,
    NOMBRE          NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO       NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS TIPO DE NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD.ID_TIPO_NOVEDAD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL TIPO DE NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO DEL TIPO DE NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL TIPO DE NOVEDAD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL TIPO DE NOVEDAD.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_TIPO_NOVEDAD ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD ADD CONSTRAINT PK_TNV PRIMARY KEY ( ID_TIPO_NOVEDAD );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA (
    ID_TIPO_PERSONA NUMBER(38) NOT NULL,
    CODIGO          NVARCHAR2(1000) NOT NULL,
    NOMBRE          NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO       NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS TIPO DE PERSONA, APLICABLES A LOS SUJETOS PROCESALES..';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA.ID_TIPO_PERSONA IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL TIPO DE PERSONA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO POR CADA TIPO DE PERSONA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL TIPO DE PERSONA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL TIPO DE PERSONA.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_TIPO_PERSONA ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA ADD CONSTRAINT PK_TPE PRIMARY KEY ( ID_TIPO_PERSONA );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO (
    ID_TIPO_PROCESO NUMBER(38) NOT NULL,
    CODIGO          NVARCHAR2(1000) NOT NULL,
    NOMBRE          NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO       NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS TIPOS DE PROCESO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO.ID_TIPO_PROCESO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL TIPO DE PROCESO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO DEL TIPO DE PROCESO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE ÚNICO DEL TIPO DE PROCESO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL TIPO DE PROCESO.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_TIPO_PROCESO ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO ADD CONSTRAINT PK_TPP PRIMARY KEY ( ID_TIPO_PROCESO );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD (
    ID_TIPO_SOLICITUD NUMBER(38) NOT NULL,
    CODIGO            NVARCHAR2(1000) NOT NULL,
    NOMBRE            NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO         NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS TIPO DE SOLICITUDES DE DESARCHIVE DE PROCESOS, REALIZADAS POR LOS USUARIOS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD.ID_TIPO_SOLICITUD IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL TIPO DE SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO POR CADA TIPO DE SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL TIPO DE SOLICITUD.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL TIPO DE SOLICITUD.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_TIPO_SOLICITUD ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD ADD CONSTRAINT PK_TSO PRIMARY KEY ( ID_TIPO_SOLICITUD );

CREATE TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL (
    ID_TIPO_SUJETO_PROCESAL NUMBER(38) NOT NULL,
    CODIGO                  NVARCHAR2(1000) NOT NULL,
    NOMBRE                  NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO               NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS TIPO DE SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL.ID_TIPO_SUJETO_PROCESAL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL TIPO DE SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO POR CADA TIPO DE SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL TIPO DE SUJETO PROCESAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL TIPO DE SUJETO PROCESAL.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_CORE_PRE.IDX_TIPO_SUJETO_PROCESAL ON
    SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL ADD CONSTRAINT PK_TSP PRIMARY KEY ( ID_TIPO_SUJETO_PROCESAL );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ
    ADD CONSTRAINT FK_BDG_DBP FOREIGN KEY ( ID_BODEGA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA ( ID_BODEGA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ
    ADD CONSTRAINT FK_BDG_HDB FOREIGN KEY ( ID_BODEGA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA ( ID_BODEGA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE
    ADD CONSTRAINT FK_BDG_PAQ FOREIGN KEY ( ID_BODEGA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA ( ID_BODEGA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA
    ADD CONSTRAINT FK_BDG_PBD FOREIGN KEY ( ID_BODEGA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA ( ID_BODEGA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ
    ADD CONSTRAINT FK_DBP_DPB FOREIGN KEY ( ID_DETALLE_BOD_PAQ )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ ( ID_DETALLE_BOD_PAQ );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ
    ADD CONSTRAINT FK_DBP_HDB FOREIGN KEY ( ID_DETALLE_BOD_PAQ )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ ( ID_DETALLE_BOD_PAQ );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ
    ADD CONSTRAINT FK_DPB_HDP FOREIGN KEY ( ID_DETALLE_PROF_BOD_PAQ )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ ( ID_DETALLE_PROF_BOD_PAQ );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ
    ADD CONSTRAINT FK_DPQ_DBP FOREIGN KEY ( ID_DETALLE_PAQUETE )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE ( ID_DETALLE_PAQUETE );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD
    ADD CONSTRAINT FK_ENO_NOV FOREIGN KEY ( ID_ESTADO_NOVEDAD )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD ( ID_ESTADO_NOVEDAD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE
    ADD CONSTRAINT FK_EPQ_PAQ FOREIGN KEY ( ID_ESTADO_PAQUETE )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE ( ID_ESTADO_PAQUETE );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD_X_JUZGADO
    ADD CONSTRAINT FK_ESP_EXJ FOREIGN KEY ( ID_ESPECIALIDAD )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD ( ID_ESPECIALIDAD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESP_X_TIPO_PROCESO
    ADD CONSTRAINT FK_ESP_EXT FOREIGN KEY ( ID_ESPECIALIDAD )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD ( ID_ESPECIALIDAD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES
    ADD CONSTRAINT FK_ESP_SLC FOREIGN KEY ( ID_ESPECIALIDAD )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD ( ID_ESPECIALIDAD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOL_X_ROL
    ADD CONSTRAINT FK_ESS_EXR FOREIGN KEY ( ID_ESTADO_SOLICITUD )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD ( ID_ESTADO_SOLICITUD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD
    ADD CONSTRAINT FK_ESS_HES FOREIGN KEY ( "ID_ESTADO_SOLICITUD " )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD ( ID_ESTADO_SOLICITUD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES
    ADD CONSTRAINT FK_ESS_SLC FOREIGN KEY ( ID_ESTADO_SOLICITUD )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD ( ID_ESTADO_SOLICITUD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL_X_JUZGADO
    ADD CONSTRAINT FK_GEP_GXJ FOREIGN KEY ( ID_GESTOR_PROCESAL )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL ( ID_GESTOR_PROCESAL );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA
    ADD CONSTRAINT FK_HES_HXI FOREIGN KEY ( ID_HIST_ESTADO_SOLICITUD )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD ( ID_HIST_ESTADO_SOLICITUD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA
    ADD CONSTRAINT FK_IDA_HXI FOREIGN KEY ( ID_INCIDENCIA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA ( ID_INCIDENCIA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD_X_JUZGADO
    ADD CONSTRAINT FK_JUZ_EXJ FOREIGN KEY ( ID_JUZGADO )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO ( ID_JUZGADO );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL_X_JUZGADO
    ADD CONSTRAINT FK_JUZ_GXJ FOREIGN KEY ( ID_JUZGADO )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO ( ID_JUZGADO );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE
    ADD CONSTRAINT FK_JUZ_PAQ FOREIGN KEY ( ID_JUZGADO )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO ( ID_JUZGADO );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES
    ADD CONSTRAINT FK_JUZ_SLC FOREIGN KEY ( ID_JUZGADO )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO ( ID_JUZGADO );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ
    ADD CONSTRAINT FK_PBD_DPB FOREIGN KEY ( ID_PROFESIONAL_BODEGA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA ( ID_PROFESIONAL_BODEGA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ
    ADD CONSTRAINT FK_PBD_HDP FOREIGN KEY ( ID_PROFESIONAL_BODEGA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA ( ID_PROFESIONAL_BODEGA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO
    ADD CONSTRAINT FK_PRC_PRM FOREIGN KEY ( ID_PROCEDIMIENTO )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO ( ID_PROCEDIMIENTO );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE
    ADD CONSTRAINT FK_SLC_DPQ FOREIGN KEY ( ID_SOLICITUD_DES )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES ( ID_SOLICITUD_DES );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD
    ADD CONSTRAINT FK_SLC_HES FOREIGN KEY ( ID_SOLICITUD_DES )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES ( ID_SOLICITUD_DES );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PRO_X_SOLICITUD_DES
    ADD CONSTRAINT FK_SLC_SXS FOREIGN KEY ( ID_SOLICITUD_DES )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES ( ID_SOLICITUD_DES );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PRO_X_SOLICITUD_DES
    ADD CONSTRAINT FK_SPR_SPP FOREIGN KEY ( ID_SUJETO_PROCESAL )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL ( ID_SUJETO_PROCESAL );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD
    ADD CONSTRAINT FK_TNV_NOV FOREIGN KEY ( ID_TIPO_NOVEDAD )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD ( ID_TIPO_NOVEDAD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES
    ADD CONSTRAINT FK_TPE_SLC FOREIGN KEY ( ID_TIPO_PERSONA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA ( ID_TIPO_PERSONA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL
    ADD CONSTRAINT FK_TPE_SPR FOREIGN KEY ( ID_TIPO_PERSONA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA ( ID_TIPO_PERSONA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.ESP_X_TIPO_PROCESO
    ADD CONSTRAINT FK_TPP_EXT FOREIGN KEY ( ID_TIPO_PROCESO )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO ( ID_TIPO_PROCESO );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES
    ADD CONSTRAINT FK_TPP_SLC FOREIGN KEY ( ID_TIPO_PROCESO )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO ( ID_TIPO_PROCESO );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA
    ADD CONSTRAINT FK_TRA_HTF FOREIGN KEY ( ID_TARIFA )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA ( ID_TARIFA );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES
    ADD CONSTRAINT FK_TSO_SLC FOREIGN KEY ( ID_TIPO_SOLICITUD )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD ( ID_TIPO_SOLICITUD );

ALTER TABLE SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL
    ADD CONSTRAINT FK_TSO_SPR FOREIGN KEY ( ID_TIPO_SUJETO_PROCESAL )
        REFERENCES SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL ( ID_TIPO_SUJETO_PROCESAL );

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_BODEGA START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_BODEGA BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.BODEGA
    FOR EACH ROW
    WHEN ( NEW.ID_BODEGA IS NULL )
BEGIN
    :NEW.ID_BODEGA := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_BODEGA.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_DETALLE_BOD_PAQ START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_DETALLE_BOD_PAQ BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_BOD_PAQ
    FOR EACH ROW
    WHEN ( NEW.ID_DETALLE_BOD_PAQ IS NULL )
BEGIN
    :NEW.ID_DETALLE_BOD_PAQ := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_DETALLE_BOD_PAQ.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_DETALLE_PAQUETE START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_DETALLE_PAQUETE BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PAQUETE
    FOR EACH ROW
    WHEN ( NEW.ID_DETALLE_PAQUETE IS NULL )
BEGIN
    :NEW.ID_DETALLE_PAQUETE := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_DETALLE_PAQUETE.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_DETALLE_PROF_BOD_PAQ START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_DETALLE_PROF_BOD_PAQ BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.DETALLE_PROF_BOD_PAQ
    FOR EACH ROW
    WHEN ( NEW.ID_DETALLE_PROF_BOD_PAQ IS NULL )
BEGIN
    :NEW.ID_DETALLE_PROF_BOD_PAQ := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_DETALLE_PROF_BOD_PAQ.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESPECIALIDAD START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_ESPECIALIDAD BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.ESPECIALIDAD
    FOR EACH ROW
    WHEN ( NEW.ID_ESPECIALIDAD IS NULL )
BEGIN
    :NEW.ID_ESPECIALIDAD := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESPECIALIDAD.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESTADO_NOVEDAD START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_ESTADO_NOVEDAD BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_NOVEDAD
    FOR EACH ROW
    WHEN ( NEW.ID_ESTADO_NOVEDAD IS NULL )
BEGIN
    :NEW.ID_ESTADO_NOVEDAD := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESTADO_NOVEDAD.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESTADO_PAQUETE START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_ESTADO_PAQUETE BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_PAQUETE
    FOR EACH ROW
    WHEN ( NEW.ID_ESTADO_PAQUETE IS NULL )
BEGIN
    :NEW.ID_ESTADO_PAQUETE := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESTADO_PAQUETE.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESTADO_SOL_X_ROL START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG__ESTADO_SOL_X_ROL BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOL_X_ROL
    FOR EACH ROW
    WHEN ( NEW.ID_ESTADO_SOL_X_ROL IS NULL )
BEGIN
    :NEW.ID_ESTADO_SOL_X_ROL := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESTADO_SOL_X_ROL.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESTADO_SOLICITUD START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_ESTADO_SOLICITUD BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.ESTADO_SOLICITUD
    FOR EACH ROW
    WHEN ( NEW.ID_ESTADO_SOLICITUD IS NULL )
BEGIN
    :NEW.ID_ESTADO_SOLICITUD := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_ESTADO_SOLICITUD.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_GESTOR_PROCESAL START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_GESTOR_PROCESAL BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.GESTOR_PROCESAL
    FOR EACH ROW
    WHEN ( NEW.ID_GESTOR_PROCESAL IS NULL )
BEGIN
    :NEW.ID_GESTOR_PROCESAL := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_GESTOR_PROCESAL.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HIST_DETALLE_BOD_PAQ START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_HIST_DETALLE_BOD_PAQ BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_BOD_PAQ
    FOR EACH ROW
    WHEN ( NEW.ID_HIST_DETALLE_BOD_PAQ IS NULL )
BEGIN
    :NEW.ID_HIST_DETALLE_BOD_PAQ := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HIST_DETALLE_BOD_PAQ.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HIST_DETALLE_PROF_BOD_PAQ START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_HIST_DETALLE_PROF_BOD_PAQ BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_DETALLE_PROF_BOD_PAQ
    FOR EACH ROW
    WHEN ( NEW.ID_HIST_DETALLE_PROF_BOD_PAQ IS NULL )
BEGIN
    :NEW.ID_HIST_DETALLE_PROF_BOD_PAQ := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HIST_DETALLE_PROF_BOD_PAQ.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HIST_EST_SOL_X_INCIDENCIA START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_HIST_EST_SOL_X_INCIDENCIA BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_EST_SOL_X_INCIDENCIA
    FOR EACH ROW
    WHEN ( NEW.ID_HIST_EST_SOL_X_INCIDENCIA IS NULL )
BEGIN
    :NEW.ID_HIST_EST_SOL_X_INCIDENCIA := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HIST_EST_SOL_X_INCIDENCIA.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HIST_ESTADO_SOLICITUD START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_HIST_ESTADO_SOLICITUD BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.HIST_ESTADO_SOLICITUD
    FOR EACH ROW
    WHEN ( NEW.ID_HIST_ESTADO_SOLICITUD IS NULL )
BEGIN
    :NEW.ID_HIST_ESTADO_SOLICITUD := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HIST_ESTADO_SOLICITUD.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HISTORICO_TARIFA START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_HISTORICO_TARIFA BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.HISTORICO_TARIFA
    FOR EACH ROW
    WHEN ( NEW.ID_HISTORICO_TARIFA IS NULL )
BEGIN
    :NEW.ID_HISTORICO_TARIFA := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_HISTORICO_TARIFA.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_INCIDENCIA START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_INCIDENCIA BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.INCIDENCIA
    FOR EACH ROW
    WHEN ( NEW.ID_INCIDENCIA IS NULL )
BEGIN
    :NEW.ID_INCIDENCIA := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_INCIDENCIA.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_JUZGADO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_JUZGADO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.JUZGADO
    FOR EACH ROW
    WHEN ( NEW.ID_JUZGADO IS NULL )
BEGIN
    :NEW.ID_JUZGADO := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_JUZGADO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_NOVEDAD START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_NOVEDAD BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.NOVEDAD
    FOR EACH ROW
    WHEN ( NEW.ID_NOVEDAD IS NULL )
BEGIN
    :NEW.ID_NOVEDAD := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_NOVEDAD.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PAQUETE START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_PAQUETE BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.PAQUETE
    FOR EACH ROW
    WHEN ( NEW.ID_PAQUETE IS NULL )
BEGIN
    :NEW.ID_PAQUETE := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PAQUETE.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PARAM_SWEB_EXT START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_PARAM_SWEB_EXT BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.PARAM_SWEB_EXT
    FOR EACH ROW
    WHEN ( NEW.ID_PARAM_SWEB_EXT IS NULL )
BEGIN
    :NEW.ID_PARAM_SWEB_EXT := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PARAM_SWEB_EXT.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PARAMETRO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_PARAMETRO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.PARAMETRO
    FOR EACH ROW
    WHEN ( NEW.ID_PARAMETRO IS NULL )
BEGIN
    :NEW.ID_PARAMETRO := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PARAMETRO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PROCEDIMIENTO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_PROCEDIMIENTO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.PROCEDIMIENTO
    FOR EACH ROW
    WHEN ( NEW.ID_PROCEDIMIENTO IS NULL )
BEGIN
    :NEW.ID_PROCEDIMIENTO := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PROCEDIMIENTO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PROFESIONAL_BODEGA START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_PROFESIONAL_BODEGA BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.PROFESIONAL_BODEGA
    FOR EACH ROW
    WHEN ( NEW.ID_PROFESIONAL_BODEGA IS NULL )
BEGIN
    :NEW.ID_PROFESIONAL_BODEGA := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_PROFESIONAL_BODEGA.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_SOLICITUD_DES START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_SOLICITUD_DES BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.SOLICITUD_DES
    FOR EACH ROW
    WHEN ( NEW.ID_SOLICITUD_DES IS NULL )
BEGIN
    :NEW.ID_SOLICITUD_DES := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_SOLICITUD_DES.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_SUJETO_PROCESAL START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_SUJETO_PROCESAL BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.SUJETO_PROCESAL
    FOR EACH ROW
    WHEN ( NEW.ID_SUJETO_PROCESAL IS NULL )
BEGIN
    :NEW.ID_SUJETO_PROCESAL := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_SUJETO_PROCESAL.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TARIFA START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG__TARIFA BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.TARIFA
    FOR EACH ROW
    WHEN ( NEW.ID_TARIFA IS NULL )
BEGIN
    :NEW.ID_TARIFA := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TARIFA.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_NOVEDAD START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_TIPO_NOVEDAD BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_NOVEDAD
    FOR EACH ROW
    WHEN ( NEW.ID_TIPO_NOVEDAD IS NULL )
BEGIN
    :NEW.ID_TIPO_NOVEDAD := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_NOVEDAD.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_PERSONA START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_TIPO_PERSONA BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PERSONA
    FOR EACH ROW
    WHEN ( NEW.ID_TIPO_PERSONA IS NULL )
BEGIN
    :NEW.ID_TIPO_PERSONA := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_PERSONA.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_PROCESO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_TIPO_PROCESO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_PROCESO
    FOR EACH ROW
    WHEN ( NEW.ID_TIPO_PROCESO IS NULL )
BEGIN
    :NEW.ID_TIPO_PROCESO := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_PROCESO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_SOLICITUD START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_TIPO_SOLICITUD BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SOLICITUD
    FOR EACH ROW
    WHEN ( NEW.ID_TIPO_SOLICITUD IS NULL )
BEGIN
    :NEW.ID_TIPO_SOLICITUD := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_SOLICITUD.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_SUJETO_PROCESAL START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_CORE_PRE.TRG_TIPO_SUJETO_PROCESAL BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_CORE_PRE.TIPO_SUJETO_PROCESAL
    FOR EACH ROW
    WHEN ( NEW.ID_TIPO_SUJETO_PROCESAL IS NULL )
BEGIN
    :NEW.ID_TIPO_SUJETO_PROCESAL := SCH_ORCL_DESARCHIVE_CORE_PRE.SEQ_TIPO_SUJETO_PROCESAL.NEXTVAL;
END;
/

--- GENERACION DE PERMISOS 
DECLARE
  V_ROL  VARCHAR2(4000);
  CURSOR C_PERMISOS
  IS 
    SELECT 'GRANT SELECT, INSERT, UPDATE, DELETE ON SCH_ORCL_DESARCHIVE_CORE_PRE.'||TABLE_NAME||' TO ' AS SENTENCIA
	FROM   ALL_TABLES
    WHERE  OWNER = 'SCH_ORCL_DESARCHIVE_CORE_PRE';
  R_PER C_PERMISOS%ROWTYPE;
BEGIN
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA CREACION OBJETOS OK....',NULL,NULL);
  PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA ASIGNACION PERMISOS OBJETOS....',NULL,NULL);
  V_ROL := 'ROL_DESARCHIVE_CORE_PRE';
  OPEN C_PERMISOS;
  LOOP
    FETCH C_PERMISOS INTO R_PER;
    EXIT WHEN C_PERMISOS%NOTFOUND;
      EXECUTE IMMEDIATE R_PER.SENTENCIA||V_ROL;
  END LOOP;
  CLOSE C_PERMISOS;
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA ASIGNACION PERMISOS OBJETOS OK....',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    IF C_PERMISOS%ISOPEN THEN CLOSE C_PERMISOS; END IF;
	PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR GENERANDO PERMISOS....',SQLCODE,SQLERRM);
END;
/
DECLARE
  V_TEXTO VARCHAR2(4000);
  V_IDX   VARCHAR2(4000):= 'ORCL_DESARCHIVE_CORE_PRE_IDX';
  V_OW    VARCHAR2(4000):= 'SCH_ORCL_DESARCHIVE_CORE_PRE';
  CURSOR C_INDEX(P_TBL_IDX VARCHAR2,
                 P_TBL_OW  VARCHAR2)
  IS 
    SELECT ('ALTER INDEX '||OWNER||'.'||INDEX_NAME||' REBUILD TABLESPACE '||P_TBL_IDX)AS SENTENCIA
    FROM ALL_INDEXES WHERE OWNER = V_OW; 
  R_INDEX C_INDEX%ROWTYPE;
BEGIN
  PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA ASIGNACION INDICES OBJETOS A TABLESPACE IDX....',NULL,NULL);
  OPEN C_INDEX(V_IDX,V_OW);
  LOOP
  FETCH C_INDEX INTO R_INDEX;
  EXIT WHEN C_INDEX%NOTFOUND;
    EXECUTE IMMEDIATE R_INDEX.SENTENCIA;
  END LOOP;
  CLOSE C_INDEX;
  EXECUTE IMMEDIATE 'ALTER USER '||V_OW||' QUOTA 1000M ON '||V_IDX||'';  -- ASIGNA LA CUOTA AL TABLESPACE DE INDICE
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA ASIGNACION INDICES OBJETOS A TABLESPACE IDX OK....',NULL,NULL);
  PROC_AUDITA_OBJETOS('DESARCHIVE','ORCL_DESARCHIVE_CORE_PRE','FINALIZACION CREACION BD',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    IF C_INDEX%ISOPEN THEN CLOSE C_INDEX; END IF;
    PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR ASIGNANDO OBJ A TABLESPACES IDX....',SQLCODE,SQLERRM);
END;