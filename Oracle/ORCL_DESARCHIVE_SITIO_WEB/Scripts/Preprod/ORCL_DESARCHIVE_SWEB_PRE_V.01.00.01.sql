/*
-------------------------------------------------------------------------------------------------------------------------------
-- OBJETIVO                  : CREACION DEL MODELO RELACIONAL BD DESARCHIVE SITIO WEB MODULO DESARCHIVE.
-- PARÃ?METROS DE ENTRADA     : LA EJECUCIÃ³N DEL SCRIPT SOLICITA LOS SIGUIENTES PARAMETROS
								SERVICIO        : ORCL_DESARCHIVE_SWEB_PRE
								SIZE_TABLESPACE : DEVOPS -> 10
								                  19C    -> 1000
												  21C    -> 1000
-- PARÃ?METROS DE SALIDA      : NA   
-- OBJETOS QUE LO REFERENCIAN: NA
-- LIDER TÃ‰CNICO             : GABRIEL EDUARDO DUARTE             
-- FECHAHORA                 : 2021/11/29
-- REALIZADO POR             : INFORMATICA & TECNOLOGIA (GEDV - JAPC)
--	                           ESTE COMPONENTE FUE REALIZADO BAJO LA METODOLOGÃ­A DE DESARROLLO DE INFORMÃ¡TICA & TECNOLOGÃ­A 
--                             Y SE ENCUENTRA PROTEGIDO POR LAS LEYES DE DERECHOS DE AUTOR.
-- FECHAHORA MODIFICACIÃ“N    : 
-- LIDER MODIFICACIÃ“N        : 
-- REALIZADO POR             : 
-- OBJETIVO MODIFICACIÃ“N     : 
--                             
-----------------------------------------------------------------------------------------------------------------------------
*/
DECLARE
   V_CREASERVICIO   VARCHAR2(4000);
   V_INICIASERVICIO VARCHAR2(4000);
   V_SERVICIO       VARCHAR2(500);
   V_SIZE_TBL       NUMBER;
   V_CREATABLESDATA VARCHAR2(4000);
   V_CREATABLESIDX  VARCHAR2(4000);
   V_RUTA           VARCHAR2(500);
   V_RUTA_DATA      VARCHAR2(500);
   V_RUTA_IDX       VARCHAR2(500);
   V_CREA_USUARIO   VARCHAR2(500);
   V_USUARIO        VARCHAR2(500);
   V_CREA_ROL       VARCHAR2(500);   
   
BEGIN
    DELETE FROM AUDITORIA_OBJETOS;COMMIT;
	PROC_AUDITA_OBJETOS('DESARCHIVE SITIO WEB','ORCL_DESARCHIVE_SWEB_PRE','CREACION BD',NULL,NULL);
    V_SERVICIO := '&SERVICIO';
	V_SIZE_TBL := '&SIZE_TABLESPACE';
    --CREANDO SERVICIO
    V_CREASERVICIO := 'BEGIN
                          DBMS_SERVICE.CREATE_SERVICE(
                            SERVICE_NAME => :SERVICIO,
                            NETWORK_NAME => :SERVICIO);
                        END;';
    EXECUTE IMMEDIATE V_CREASERVICIO USING V_SERVICIO;                    
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA SERVICIO '||V_SERVICIO||' OK.',NULL,NULL);

    --INICIANDO SERVICIO
    V_INICIASERVICIO := ' BEGIN
                           DBMS_SERVICE.START_SERVICE(SERVICE_NAME => :SERVICIO);
                        END;';
    EXECUTE IMMEDIATE V_INICIASERVICIO USING V_SERVICIO;
    PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA SERVICIO '||V_SERVICIO||' OK.',NULL,NULL);
    
    EXECUTE IMMEDIATE 'CREATE ROLE ROLPRE_DESARCHIVE_SWEB';
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA ROL OK.',NULL,NULL);
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE VIEW, CREATE TRIGGER,CREATE PROCEDURE TO ROLPRE_DESARCHIVE_SWEB';
    PROC_AUDITA_OBJETOS(NULL,NULL,'OTORGA PERMISOS OK.',NULL,NULL);
    
    ---OBTENIENDO RUTA DE INSTALACION DEL MOTOR
    SELECT SUBSTR(FILE_NAME,1,INSTR(FILE_NAME,'\',-1))
    INTO   V_RUTA
    FROM   DBA_DATA_FILES
    WHERE  ROWNUM = 1;

    ---CREANDO TABLESPACEDATA
    V_RUTA_DATA      := V_RUTA||V_SERVICIO||'_DATA.DBF';
    V_CREATABLESDATA := 'CREATE TABLESPACE '||V_SERVICIO||'_DATA DATAFILE '''||V_RUTA_DATA||''' SIZE '||V_SIZE_TBL||'M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED';
    EXECUTE IMMEDIATE V_CREATABLESDATA;
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA TABLESPACE DATA '||V_RUTA_DATA||' OK...',NULL,NULL);

    ---CREANDO TABLESPACE IDX
    V_RUTA_IDX      := V_RUTA||V_SERVICIO||'_IDX.DBF';
    V_CREATABLESIDX := 'CREATE TABLESPACE '||V_SERVICIO||'_IDX  DATAFILE '''||V_RUTA_IDX||''' SIZE '||V_SIZE_TBL||'M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED';
    EXECUTE IMMEDIATE V_CREATABLESIDX;
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA TABLESPACE IDX '||V_RUTA_IDX||' OK...',NULL,NULL);

    ---CREANDO USUARIO
    V_USUARIO := 'SCH_'||V_SERVICIO;
    V_CREA_USUARIO := '
                    CREATE USER '||V_USUARIO||' IDENTIFIED BY '||V_USUARIO||'
                    DEFAULT TABLESPACE '||V_SERVICIO||'_DATA
                    TEMPORARY TABLESPACE TEMP
                    QUOTA UNLIMITED ON '||V_SERVICIO||'_DATA';
    EXECUTE IMMEDIATE V_CREA_USUARIO;   
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA USUARIO '||V_USUARIO||' OK...',NULL,NULL);

    ---OTORGANDO PERMISOS AL USUARIO
    EXECUTE IMMEDIATE 'GRANT ROLPRE_DESARCHIVE_SWEB TO '||V_USUARIO;
    PROC_AUDITA_OBJETOS(NULL,NULL,'OTORTANDO PERMISOS ROL, OK...',NULL,NULL);
    PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA CREACION OBJETOS BD ....',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR DURANTE INSTALACION BD',SQLCODE,SQLERRM);
END;
/

CREATE TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.DETALLE_PAQUETE (
    ID_DETALLE     NUMBER(38) NOT NULL,
    ANIO_PAQUETE   NVARCHAR2(2000),
    NUMERO_PAQUETE NVARCHAR2(2000),
    ID_PROCESO     NUMBER(38) NOT NULL
);

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.DETALLE_PAQUETE ADD CONSTRAINT PK_DPQ PRIMARY KEY ( ID_DETALLE );

CREATE TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.ESTADO_SOLICITUD (
    ID_ESTADO_SOLICITUD NUMBER(38) NOT NULL,
    CODIGO              NVARCHAR2(1000) NOT NULL,
    NOMBRE              NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO           NUMBER(1) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_SWEB_PRE.IDX_CODIGO_ESTADO_SOLICITUD ON
    SCH_ORCL_DESARCHIVE_SWEB_PRE.ESTADO_SOLICITUD (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.ESTADO_SOLICITUD ADD CONSTRAINT PK_ESS PRIMARY KEY ( ID_ESTADO_SOLICITUD );

CREATE TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.PROCESO (
    ID_PROCESO          NUMBER(38) NOT NULL,
    NUMERO_PROCESO      NUMBER(38) NOT NULL,
    NUMERO_PROCESO_JUD  NUMBER(38),
    OBSERVACIONES       NVARCHAR2(2000),
    CODIGO_ANIO_PROCESO NVARCHAR2(2000) NOT NULL,
    ID_SOLICITUD        NUMBER(38) NOT NULL,
    ID_MUNICIPIO        NUMBER(38) NOT NULL
);

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.PROCESO ADD CONSTRAINT PK_PRO PRIMARY KEY ( ID_PROCESO );

CREATE TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.SOLICITUD_DES (
    ID_SOLICITUD_DES         NUMBER(38) NOT NULL,
    NUMERO_IDENTIFICACION    NVARCHAR2(1000) NOT NULL,
    PRIMER_NOMBRE            NVARCHAR2(1000) NOT NULL,
    SEGUNDO_NOMBRE           NVARCHAR2(1000),
    PRIMER_APELLIDO          NVARCHAR2(1000) NOT NULL,
    SEGUNDO_APELLIDO         NVARCHAR2(1000),
    NOMBRE_APELLIDOS         NVARCHAR2(2000) NOT NULL,
    TELEFONO                 NVARCHAR2(1000) NOT NULL,
    CORREO_NOTIFICACION      NVARCHAR2(1000) NOT NULL,
    CODIGO_TIPO_PROCESO      NVARCHAR2(2000) NOT NULL,
    CODIGO_JUZGADO           NVARCHAR2(2000) NOT NULL,
    CODIGO_ESPECIALIDAD      NVARCHAR2(2000) NOT NULL,
    CODIGO_TIPO_DOCUMENTO    NVARCHAR2(2000) NOT NULL,
    ID_ESTADO_SOLICITUD      NUMBER(38) NOT NULL,
    FECHA_RADICADO_SOLICITUD DATE
);

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.SOLICITUD_DES ADD CONSTRAINT PK_SLC PRIMARY KEY ( ID_SOLICITUD_DES );

CREATE TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.SUJETO_PROCESAL (
    ID_SUJETO_PROCESAL       NUMBER(38) NOT NULL,
    PRIMER_NOMBRE            NVARCHAR2(1000) NOT NULL,
    SEGUNDO_NOMBRE           NVARCHAR2(1000),
    PRIMER_APELLIDO          NVARCHAR2(1000) NOT NULL,
    SEGUNDO_APELLIDO         NVARCHAR2(1000),
    NOMBRE_APELLIDOS         NVARCHAR2(2000) NOT NULL,
    CODIGO_TIPO_SUJ_PROCESAL NVARCHAR2(2000) NOT NULL
);

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.SUJETO_PROCESAL ADD CONSTRAINT PK_SJP PRIMARY KEY ( ID_SUJETO_PROCESAL );

CREATE TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.SUJETO_PROCESAL_X_PROCESO (
    ID_SUJETO_PROCESAL NUMBER(38) NOT NULL,
    ID_PROCESO         NUMBER(38) NOT NULL
);

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.SUJETO_PROCESAL_X_PROCESO ADD CONSTRAINT PK_SPP PRIMARY KEY ( ID_SUJETO_PROCESAL,
                                                                                                       ID_PROCESO );

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.SOLICITUD_DES
    ADD CONSTRAINT FK_ESS_SLC FOREIGN KEY ( ID_ESTADO_SOLICITUD )
        REFERENCES SCH_ORCL_DESARCHIVE_SWEB_PRE.ESTADO_SOLICITUD ( ID_ESTADO_SOLICITUD );

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.DETALLE_PAQUETE
    ADD CONSTRAINT FK_PRO_DPQ FOREIGN KEY ( ID_PROCESO )
        REFERENCES SCH_ORCL_DESARCHIVE_SWEB_PRE.PROCESO ( ID_PROCESO );

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.SUJETO_PROCESAL_X_PROCESO
    ADD CONSTRAINT FK_PRO_SPP FOREIGN KEY ( ID_PROCESO )
        REFERENCES SCH_ORCL_DESARCHIVE_SWEB_PRE.PROCESO ( ID_PROCESO );

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.SUJETO_PROCESAL_X_PROCESO
    ADD CONSTRAINT FK_SJP_SPP FOREIGN KEY ( ID_SUJETO_PROCESAL )
        REFERENCES SCH_ORCL_DESARCHIVE_SWEB_PRE.SUJETO_PROCESAL ( ID_SUJETO_PROCESAL );

ALTER TABLE SCH_ORCL_DESARCHIVE_SWEB_PRE.PROCESO
    ADD CONSTRAINT FK_SLC_PRO FOREIGN KEY ( ID_SOLICITUD )
        REFERENCES SCH_ORCL_DESARCHIVE_SWEB_PRE.SOLICITUD_DES ( ID_SOLICITUD_DES );

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_DETALLE_PAQUETE START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_SWEB_PRE.TRG_DETALLE_PAQUETE BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_SWEB_PRE.DETALLE_PAQUETE
    FOR EACH ROW
    WHEN ( NEW.ID_DETALLE IS NULL )
BEGIN
    :NEW.ID_DETALLE := SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_DETALLE_PAQUETE.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_ESTADO_SOLICITUD START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_SWEB_PRE.TRG_ESTADO_SOLICITUD BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_SWEB_PRE.ESTADO_SOLICITUD
    FOR EACH ROW
    WHEN ( NEW.ID_ESTADO_SOLICITUD IS NULL )
BEGIN
    :NEW.ID_ESTADO_SOLICITUD := SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_ESTADO_SOLICITUD.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_PROCESO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_SWEB_PRE.TRG_PROCESO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_SWEB_PRE.PROCESO
    FOR EACH ROW
    WHEN ( NEW.ID_PROCESO IS NULL )
BEGIN
    :NEW.ID_PROCESO := SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_PROCESO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_SOLICITUD_DES START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_SWEB_PRE.TRG_SOLICITUD_DES BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_SWEB_PRE.SOLICITUD_DES
    FOR EACH ROW
    WHEN ( NEW.ID_SOLICITUD_DES IS NULL )
BEGIN
    :NEW.ID_SOLICITUD_DES := SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_SOLICITUD_DES.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_SUJETO_PROCESAL START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_SWEB_PRE.TRG_SUJETO_PROCESAL BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_SWEB_PRE.SUJETO_PROCESAL
    FOR EACH ROW
    WHEN ( NEW.ID_SUJETO_PROCESAL IS NULL )
BEGIN
    :NEW.ID_SUJETO_PROCESAL := SCH_ORCL_DESARCHIVE_SWEB_PRE.SEQ_SUJETO_PROCESAL.NEXTVAL;
END;
/

--- GENERACION DE PERMISOS 
DECLARE
  V_ROL  VARCHAR2(4000);
  CURSOR C_PERMISOS
  IS 
    SELECT 'GRANT SELECT, INSERT, UPDATE, DELETE ON SCH_ORCL_DESARCHIVE_SWEB_PRE.'||TABLE_NAME||' TO ' AS SENTENCIA
    FROM   USER_TABLES;
  R_PER C_PERMISOS%ROWTYPE;
BEGIN
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA CREACION OBJETOS OK....',NULL,NULL);
  PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA ASIGNACION PERMISOS OBJETOS....',NULL,NULL);
  V_ROL := 'ROLPRE_DESARCHIVE_SWEB';
  OPEN C_PERMISOS;
  LOOP
    FETCH C_PERMISOS INTO R_PER;
    EXIT WHEN C_PERMISOS%NOTFOUND;
      EXECUTE IMMEDIATE R_PER.SENTENCIA||V_ROL;
  END LOOP;
  CLOSE C_PERMISOS;
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA ASIGNACION PERMISOS OBJETOS OK....',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    IF C_PERMISOS%ISOPEN THEN CLOSE C_PERMISOS; END IF;
	PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR GENERANDO PERMISOS....',SQLCODE,SQLERRM);
END;
/
DECLARE
  V_TEXTO VARCHAR2(4000);
  V_IDX   VARCHAR2(4000):= 'ORCL_DESARCHIVE_SWEB_PRE_IDX';
  V_OW    VARCHAR2(4000):= 'SCH_ORCL_DESARCHIVE_SWEB_PRE';
  CURSOR C_INDEX(P_TBL_IDX VARCHAR2,
                 P_TBL_OW  VARCHAR2)
  IS 
    SELECT ('ALTER INDEX '||OWNER||'.'||INDEX_NAME||' REBUILD TABLESPACE '||P_TBL_IDX)AS SENTENCIA
    FROM ALL_INDEXES WHERE OWNER = V_OW; 
  R_INDEX C_INDEX%ROWTYPE;
BEGIN
  PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA ASIGNACION INDICES OBJETOS A TABLESPACE IDX....',NULL,NULL);
  OPEN C_INDEX(V_IDX,V_OW);
  LOOP
  FETCH C_INDEX INTO R_INDEX;
  EXIT WHEN C_INDEX%NOTFOUND;
    EXECUTE IMMEDIATE R_INDEX.SENTENCIA;
  END LOOP;
  CLOSE C_INDEX;
  EXECUTE IMMEDIATE 'ALTER USER '||V_OW||' QUOTA 1000M ON '||V_IDX||'';  -- ASIGNA LA CUOTA AL TABLESPACE DE INDICE
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA ASIGNACION INDICES OBJETOS A TABLESPACE IDX OK....',NULL,NULL);
  PROC_AUDITA_OBJETOS('DESARCHIVE SITIO WEB','ORCL_DESARCHIVE_SWEB_PRE','FINALIZACION CREACION BD',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    IF C_INDEX%ISOPEN THEN CLOSE C_INDEX; END IF;
    PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR ASIGNANDO OBJ A TABLESPACES IDX....',SQLCODE,SQLERRM);
END;