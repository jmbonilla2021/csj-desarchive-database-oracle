/*
-------------------------------------------------------------------------------------------------------------------------------
-- OBJETIVO                  : Creacion del modelo relacional motor de reglas el cual contempla:
                               para el modulo de Reparto.
-- PARÁMETROS DE ENTRADA     : NA
-- PARÁMETROS DE SALIDA      : NA   
-- OBJETOS QUE LO REFERENCIAN: NA
-- LIDER TÉCNICO             :              
-- FECHAHORA                 : 2021/11/11
-- REALIZADO POR             : INFORMATICA & TECNOLOGIA (GEDV - JAPC)
--	                           Este componente fue realizado bajo la metodología de desarrollo de Informática & Tecnología 
--                             y se encuentra Protegido por las leyes de derechos de autor.
-- FECHAHORA MODIFICACIÓN    :
-- LIDER MODIFICACIÓN        : 
-- REALIZADO POR             : 
-- OBJETIVO MODIFICACIÓN     : 
-----------------------------------------------------------------------------------------------------------------------------
*/

PROMPT ************************************************************  Creando tabla TIPO_GESTOR_PROCESAL
CREATE TABLE SCH_ORCL_REPARTO_CORE.TIPO_GESTOR_PROCESAL (
    ID_TIPO_GESTOR_PROCESAL NUMBER(19) NOT NULL,
    CODIGO                  NVARCHAR2(1000) NOT NULL,
    NOMBRE                  NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO               NUMBER(19) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_TIPO_GESTOR_PROCESAL ON
    SCH_ORCL_REPARTO_CORE.TIPO_GESTOR_PROCESAL (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.TIPO_GESTOR_PROCESAL ADD CONSTRAINT PK_TGP PRIMARY KEY ( ID_TIPO_GESTOR_PROCESAL );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_TIPO_GESTOR_PROC START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_TIPO_GESTOR_PROC BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.TIPO_GESTOR_PROCESAL
    FOR EACH ROW
    WHEN ( NEW.ID_TIPO_GESTOR_PROCESAL IS NULL )
BEGIN
    :NEW.ID_TIPO_GESTOR_PROCESAL := SCH_ORCL_REPARTO_CORE.SEQ_TIPO_GESTOR_PROC.NEXTVAL;
END;
/


PROMPT ******************************************************  Creando tabla GESTOR_PROCESAL

CREATE TABLE SCH_ORCL_REPARTO_CORE.GESTOR_PROCESAL (
    ID_GESTOR_PROCESAL      NUMBER(19) NOT NULL,
    NUMERO_DOCUMENTO       NVARCHAR2(1000),
    PRIMER_NOMBRE           NVARCHAR2(1000) NOT NULL,
    SEGUNDO_NOMBRE          NVARCHAR2(1000),
    PRIMER_APELLIDO         NVARCHAR2(1000) NOT NULL,
    SEGUNDO_APELLIDO        NVARCHAR2(1000),
    DIRECCION               NVARCHAR2(1000) NOT NULL,
    TELEFONO                NVARCHAR2(1000) NOT NULL,
    EMAIL                   NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO               NUMBER(19) NOT NULL,
    ID_TIPO_DOCUMENTO       NUMBER(19),
    ID_TIPO_GESTOR_PROCESAL NUMBER(19) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_TIPODOC_NUM_GESTOR ON
    SCH_ORCL_REPARTO_CORE.GESTOR_PROCESAL (
        NUMERO_DOCUMENTO
    ASC,
        ID_TIPO_DOCUMENTO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.GESTOR_PROCESAL ADD CONSTRAINT PK_GEP PRIMARY KEY ( ID_GESTOR_PROCESAL );

ALTER TABLE SCH_ORCL_REPARTO_CORE.GESTOR_PROCESAL
    ADD CONSTRAINT FK_TGP_GEP FOREIGN KEY ( ID_TIPO_GESTOR_PROCESAL )
        REFERENCES SCH_ORCL_REPARTO_CORE.TIPO_GESTOR_PROCESAL ( ID_TIPO_GESTOR_PROCESAL );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_GESTOR_PROCESAL START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_GESTOR_PROCESAL BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.GESTOR_PROCESAL
    FOR EACH ROW
    WHEN ( NEW.ID_GESTOR_PROCESAL IS NULL )
BEGIN
    :NEW.ID_GESTOR_PROCESAL := SCH_ORCL_REPARTO_CORE.SEQ_GESTOR_PROCESAL.NEXTVAL;
END;
/

PROMPT ******************************************************  Creando tabla JURISDICCION
DROP TABLE SCH_ORCL_REPARTO_CORE.JURISDICCION CASCADE CONSTRAINTS;
DROP SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_JURISDICCION;
CREATE TABLE SCH_ORCL_REPARTO_CORE.JURISDICCION (
    ID_JURISDICCION NUMBER(19) NOT NULL,
    CODIGO          NVARCHAR2(1000) NOT NULL,
    NOMBRE          NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO       NUMBER(1) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_JURISDICCION ON
    SCH_ORCL_REPARTO_CORE.JURISDICCION (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.JURISDICCION ADD CONSTRAINT PK_JRD PRIMARY KEY ( ID_JURISDICCION );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_JURISDICCION START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_JURISDICCION BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.JURISDICCION
    FOR EACH ROW
    WHEN ( NEW.ID_JURISDICCION IS NULL )
BEGIN
    :NEW.ID_JURISDICCION := SCH_ORCL_REPARTO_CORE.SEQ_JURISDICCION.NEXTVAL;
END;
/

PROMPT ******************************************************  Creando tabla COMPETENCIA
CREATE TABLE SCH_ORCL_REPARTO_CORE.COMPETENCIA (
    ID_COMPETENCIA NUMBER(19) NOT NULL,
    CODIGO         NVARCHAR2(1000) NOT NULL,
    NOMBRE         NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO      NUMBER(19) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_COMPETENCIA ON
    SCH_ORCL_REPARTO_CORE.COMPETENCIA (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.COMPETENCIA ADD CONSTRAINT PK_CPT PRIMARY KEY ( ID_COMPETENCIA );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_COMPETENCIA START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_COMPETENCIA BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.COMPETENCIA
    FOR EACH ROW
    WHEN ( NEW.ID_COMPETENCIA IS NULL )
BEGIN
    :NEW.ID_COMPETENCIA := SCH_ORCL_REPARTO_CORE.SEQ_COMPETENCIA.NEXTVAL;
END;
/

PROMPT ******************************************************  Creando tabla TIPO_NOVEDAD_SOLICITUD
CREATE TABLE SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_SOLICITUD (
    ID_TIPO_NOVEDAD_SOLICITUD NUMBER(19) NOT NULL,
    CODIGO                    NVARCHAR2(1000) NOT NULL,
    NOMBRE                    NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO                 NUMBER(1) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_TIP_NOVEDAD ON
    SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_SOLICITUD (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_SOLICITUD ADD CONSTRAINT PK_TNO PRIMARY KEY ( ID_TIPO_NOVEDAD_SOLICITUD );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_TIPO_NOVEDAD_SOLICITUD START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_TIPO_NOVEDAD_SOLICITUD BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_SOLICITUD
    FOR EACH ROW
    WHEN ( NEW.ID_TIPO_NOVEDAD_SOLICITUD IS NULL )
BEGIN
    :NEW.ID_TIPO_NOVEDAD_SOLICITUD := SCH_ORCL_REPARTO_CORE.SEQ_TIPO_NOVEDAD_SOLICITUD.NEXTVAL;
END;
/

PROMPT ******************************************************  Creando tabla ESTADO_DESPACHO
CREATE TABLE SCH_ORCL_REPARTO_CORE.ESTADO_DESPACHO (
    ID_ESTADO_DESPACHO NUMBER(19) NOT NULL,
    CODIGO             NVARCHAR2(1000) NOT NULL,
    NOMBRE             NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO          NUMBER(1) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_ESTADO_DESPACHO ON
    SCH_ORCL_REPARTO_CORE.ESTADO_DESPACHO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.ESTADO_DESPACHO ADD CONSTRAINT PKD_ESD PRIMARY KEY ( ID_ESTADO_DESPACHO );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_ESTADO_DESPACHO START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_ESTADO_DESPACHO BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.ESTADO_DESPACHO
    FOR EACH ROW
    WHEN ( NEW.ID_ESTADO_DESPACHO IS NULL )
BEGIN
    :NEW.ID_ESTADO_DESPACHO := SCH_ORCL_REPARTO_CORE.SEQ_ESTADO_DESPACHO.NEXTVAL;
END;
/

PROMPT ******************************************************  CREANDO TABLA TIPO_NOVEDAD_DESPACHO
CREATE TABLE SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_DESPACHO (
    ID_TIPO_NOVEDAD_DESPACHO NUMBER(19) NOT NULL,
    CODIGO                   NVARCHAR2(1000) NOT NULL,
    NOMBRE                   NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO                NUMBER(1) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_TPO_NOVEDADDESP ON
    SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_DESPACHO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_DESPACHO ADD CONSTRAINT PK_TND PRIMARY KEY ( ID_TIPO_NOVEDAD_DESPACHO );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_TIPONOV_DESPACHO START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_TIPONOV_DESPACHO BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_DESPACHO
    FOR EACH ROW
    WHEN ( NEW.ID_TIPO_NOVEDAD_DESPACHO IS NULL )
BEGIN
    :NEW.ID_TIPO_NOVEDAD_DESPACHO := SCH_ORCL_REPARTO_CORE.SEQ_TIPONOV_DESPACHO.NEXTVAL;
END;
/


PROMPT ******************************************************  CREANDO TABLA NOVEDAD_DESPACHO
CREATE TABLE SCH_ORCL_REPARTO_CORE.NOVEDAD_DESPACHO (
    ID_NOVEDAD_DESPACHO      NUMBER(19) NOT NULL,
    CODIGO                   NVARCHAR2(1000) NOT NULL,
    NOMBRE                   NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO                NUMBER(1) NOT NULL,
    ID_TIPO_NOVEDAD_DESPACHO NUMBER(19) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_NOVEDAD_DESP ON
    SCH_ORCL_REPARTO_CORE.NOVEDAD_DESPACHO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.NOVEDAD_DESPACHO ADD CONSTRAINT PK_NOD PRIMARY KEY ( ID_NOVEDAD_DESPACHO );

ALTER TABLE SCH_ORCL_REPARTO_CORE.NOVEDAD_DESPACHO
    ADD CONSTRAINT FK_TND_NOD FOREIGN KEY ( ID_TIPO_NOVEDAD_DESPACHO )
        REFERENCES SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_DESPACHO ( ID_TIPO_NOVEDAD_DESPACHO );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_NOVEDAD_DESPACHO START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_NOVEDAD_DESPACHO BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.NOVEDAD_DESPACHO
    FOR EACH ROW
    WHEN ( NEW.ID_NOVEDAD_DESPACHO IS NULL )
BEGIN
    :NEW.ID_NOVEDAD_DESPACHO := SCH_ORCL_REPARTO_CORE.SEQ_NOVEDAD_DESPACHO.NEXTVAL;
END;
/

PROMPT ******************************************************  Creando tabla DESPACHO
DROP TABLE SCH_ORCL_REPARTO_CORE.CIRCUITO CASCADE CONSTRAINTS;        
DROP TABLE SCH_ORCL_REPARTO_CORE.DISTRITO CASCADE CONSTRAINTS; 
DROP TABLE SCH_ORCL_REPARTO_CORE.JUEZ     CASCADE CONSTRAINTS;
DROP TABLE SCH_ORCL_REPARTO_CORE.DESPACHO CASCADE CONSTRAINTS;

DROP SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_CIRCUITO;
DROP SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_DISTRITO;
DROP SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_JUEZ;
DROP SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_DESPACHO;

CREATE TABLE SCH_ORCL_REPARTO_CORE.DESPACHO (
    ID_DESPACHO             NUMBER(19) NOT NULL,
    CODIGO_DESPACHO         NVARCHAR2(2) NOT NULL,
    NUMERO_DESPACHO         NVARCHAR2(1000) NOT NULL,
    NOMBRE                  NVARCHAR2(35) NOT NULL,
    DIRECCION               NVARCHAR2(1000) NOT NULL,
    TELEFONO                NVARCHAR2(1000) NOT NULL,
    EMAIL                   NVARCHAR2(1000) NOT NULL,
    CAPACIDAD               NUMBER(19),
    SOLICITUD_ASIGNADA      NVARCHAR2(1000),
    FECHA_CIERRE_INICIO     DATE,
    FECHA_CIERRE_FIN        DATE,
    ID_MUNICIPIO            NUMBER(19) NOT NULL,
    ID_ESTADO_DESPACHO      NUMBER(19) NOT NULL,
    ID_GESTOR_JUEZ_MGSTRADO NUMBER(19) NOT NULL,
    ID_GESTOR_SECR_DESPACHO NUMBER(19) NOT NULL,
    ID_CORPORACION          NUMBER(19) NOT NULL,
    ID_NOVEDAD_DESPACHO     NUMBER(19) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_COD_NUM_JUEZGSTRADO ON
    SCH_ORCL_REPARTO_CORE.DESPACHO (
        CODIGO_DESPACHO
    ASC,
        NUMERO_DESPACHO
    ASC,
        ID_GESTOR_JUEZ_MGSTRADO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.DESPACHO ADD CONSTRAINT PK_DSP PRIMARY KEY ( ID_DESPACHO );

ALTER TABLE SCH_ORCL_REPARTO_CORE.DESPACHO ADD CONSTRAINT UK_JUEZ_MGSTRADO UNIQUE ( ID_GESTOR_JUEZ_MGSTRADO );

ALTER TABLE SCH_ORCL_REPARTO_CORE.DESPACHO
    ADD CONSTRAINT FK_COR_DSP FOREIGN KEY ( ID_CORPORACION )
        REFERENCES SCH_ORCL_REPARTO_CORE.CORPORACION ( ID_CORPORACION );

ALTER TABLE SCH_ORCL_REPARTO_CORE.DESPACHO
    ADD CONSTRAINT FK_ESD_DSP FOREIGN KEY ( ID_ESTADO_DESPACHO )
        REFERENCES SCH_ORCL_REPARTO_CORE.ESTADO_DESPACHO ( ID_ESTADO_DESPACHO );

ALTER TABLE SCH_ORCL_REPARTO_CORE.DESPACHO
    ADD CONSTRAINT FK_GEP_DSP_JMGSTRADO FOREIGN KEY ( ID_GESTOR_JUEZ_MGSTRADO )
        REFERENCES SCH_ORCL_REPARTO_CORE.GESTOR_PROCESAL ( ID_GESTOR_PROCESAL );

ALTER TABLE SCH_ORCL_REPARTO_CORE.DESPACHO
    ADD CONSTRAINT FK_GEP_DSP_SECDSPCHO FOREIGN KEY ( ID_GESTOR_SECR_DESPACHO )
        REFERENCES SCH_ORCL_REPARTO_CORE.GESTOR_PROCESAL ( ID_GESTOR_PROCESAL );

ALTER TABLE SCH_ORCL_REPARTO_CORE.DESPACHO
    ADD CONSTRAINT FK_NOD_DSP FOREIGN KEY ( ID_NOVEDAD_DESPACHO )
        REFERENCES SCH_ORCL_REPARTO_CORE.NOVEDAD_DESPACHO ( ID_NOVEDAD_DESPACHO );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_DESPACHO START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_DESPACHO BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.DESPACHO
    FOR EACH ROW
    WHEN ( NEW.ID_DESPACHO IS NULL )
BEGIN
    :NEW.ID_DESPACHO := SCH_ORCL_REPARTO_CORE.SEQ_DESPACHO.NEXTVAL;
END;
/

PROMPT ******************************************************  Creando tabla ESTADO_REPARTO
CREATE TABLE SCH_ORCL_REPARTO_CORE.ESTADO_REPARTO (
    ID_ESTADO_REPARTO NUMBER(19) NOT NULL,
    CODIGO            NVARCHAR2(1000) NOT NULL,
    NOMBRE            NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO         NUMBER(1) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_ESTADO_REPARTO ON
    SCH_ORCL_REPARTO_CORE.ESTADO_REPARTO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_REPARTO_CORE.ESTADO_REPARTO ADD CONSTRAINT PK_ETR PRIMARY KEY ( ID_ESTADO_REPARTO );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_ESTADO_REPARTO START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_ESTADO_REPARTO BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.ESTADO_REPARTO
    FOR EACH ROW
    WHEN ( NEW.ID_ESTADO_REPARTO IS NULL )
BEGIN
    :NEW.ID_ESTADO_REPARTO := SCH_ORCL_REPARTO_CORE.SEQ_ESTADO_REPARTO.NEXTVAL;
END;
/

PROMPT ******************************************************  Creando tabla HISTORICO_REPARTO
CREATE TABLE SCH_ORCL_REPARTO_CORE.HISTORICO_REPARTO (
    ID_HISTORICO_REPARTO          NUMBER(19) NOT NULL,
    CODIGO_UNICO_PROCESO          NVARCHAR2(1000),
    FECHA_INICIO_REPARTO          DATE,
    FECHA_DSPCHO_SELECCIONADO     DATE,
    FECHA_NOTIF_ENV_DSPCHO        DATE,
    FECHA_NOTIF_RNVIADA_DSPCHO    DATE,
    FECHA_NOTIF_COORNO_RCBDO_JUEZ DATE,
    FECHA_RECIBIDO                DATE,
    FECHA_NOTIF_RCRDTRIO_ACPTCION DATE,
    FECHA_INADMITIDO              DATE,
    FECHA_DEVUELTO                DATE,
    FECHA_SUBSANADO               DATE,
    FECHA_ACEPTADO                DATE,
    FECHA_FIRMA_ACTA              DATE,
    FECHA_NOTIF_GESSUJ_PRCSALES   DATE,
    FECHA_REPARTIDO               DATE,
    ID_REPARTO                    NUMBER(19) NOT NULL,
    ID_ESTADO_REPARTO             NUMBER(19) NOT NULL,
    ID_DESPACHO_REPARTIDO         NUMBER(19)
);

ALTER TABLE SCH_ORCL_REPARTO_CORE.HISTORICO_REPARTO ADD CONSTRAINT PK_HSR PRIMARY KEY ( ID_HISTORICO_REPARTO );

ALTER TABLE SCH_ORCL_REPARTO_CORE.HISTORICO_REPARTO
    ADD CONSTRAINT FK_DSP_HSR FOREIGN KEY ( ID_DESPACHO_REPARTIDO )
        REFERENCES SCH_ORCL_REPARTO_CORE.DESPACHO ( ID_DESPACHO );

ALTER TABLE SCH_ORCL_REPARTO_CORE.HISTORICO_REPARTO
    ADD CONSTRAINT FK_ETR_HSR FOREIGN KEY ( ID_ESTADO_REPARTO )
        REFERENCES SCH_ORCL_REPARTO_CORE.ESTADO_REPARTO ( ID_ESTADO_REPARTO );

ALTER TABLE SCH_ORCL_REPARTO_CORE.HISTORICO_REPARTO
    ADD CONSTRAINT FK_RPT_HSR FOREIGN KEY ( ID_REPARTO )
        REFERENCES SCH_ORCL_REPARTO_CORE.REPARTO ( ID_REPARTO );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_HISTORICO_REPARTO START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_HISTORICO_REPARTO BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.HISTORICO_REPARTO
    FOR EACH ROW
    WHEN ( NEW.ID_HISTORICO_REPARTO IS NULL )
BEGIN
    :NEW.ID_HISTORICO_REPARTO := SCH_ORCL_REPARTO_CORE.SEQ_HISTORICO_REPARTO.NEXTVAL;
END;
/

PROMPT ******************************************************  CREANDO TABLA ACTA
CREATE TABLE SCH_ORCL_REPARTO_CORE.ACTA (
    ID_ACTA              NUMBER(19) NOT NULL,
    ID_HISTORICO_REPARTO NUMBER(19) NOT NULL
);

ALTER TABLE SCH_ORCL_REPARTO_CORE.ACTA ADD CONSTRAINT PK_ACT PRIMARY KEY ( ID_ACTA );

ALTER TABLE SCH_ORCL_REPARTO_CORE.ACTA
    ADD CONSTRAINT FK_HSR_ACT FOREIGN KEY ( ID_HISTORICO_REPARTO )
        REFERENCES SCH_ORCL_REPARTO_CORE.HISTORICO_REPARTO ( ID_HISTORICO_REPARTO );

CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_ACTA START WITH 1 CACHE 100 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_ACTA BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.ACTA
    FOR EACH ROW
    WHEN ( NEW.ID_ACTA IS NULL )
BEGIN
    :NEW.ID_ACTA := SCH_ORCL_REPARTO_CORE.SEQ_ACTA.NEXTVAL;
END;
/



PROMPT *****************************************  AJUSTES GENERALES BASE DE DATOS *************************
PROMPT
PROMPT
ALTER TABLE SCH_ORCL_REPARTO_CORE.CORPORACION ADD ID_COMPETENCIA  NUMBER(19);
ALTER TABLE SCH_ORCL_REPARTO_CORE.CORPORACION ADD ID_ESPECIALIDAD NUMBER(19);
ALTER TABLE SCH_ORCL_REPARTO_CORE.CORPORACION ADD ID_JURISDICCION NUMBER(19);

ALTER TABLE SCH_ORCL_REPARTO_CORE.ESPECIALIDAD DROP COLUMN ID_CORPORACION;

ALTER TABLE SCH_ORCL_REPARTO_CORE.CORPORACION
    ADD CONSTRAINT FK_ESP_COR FOREIGN KEY ( ID_ESPECIALIDAD )
        REFERENCES SCH_ORCL_REPARTO_CORE.ESPECIALIDAD ( ID_ESPECIALIDAD );

ALTER TABLE SCH_ORCL_REPARTO_CORE.CORPORACION
    ADD CONSTRAINT FK_CPT_COR FOREIGN KEY ( ID_COMPETENCIA )
        REFERENCES SCH_ORCL_REPARTO_CORE.COMPETENCIA ( ID_COMPETENCIA );
        
ALTER TABLE SCH_ORCL_REPARTO_CORE.CORPORACION
    ADD CONSTRAINT FK_JRD_COR FOREIGN KEY ( ID_JURISDICCION )
        REFERENCES SCH_ORCL_REPARTO_CORE.JURISDICCION ( ID_JURISDICCION );        


ALTER TABLE SCH_ORCL_REPARTO_CORE.REPARTO DROP COLUMN NOMBRE;
ALTER TABLE SCH_ORCL_REPARTO_CORE.SOLICITUD RENAME COLUMN ID_APODERADO TO ID_APODERADO_DEMANDANTE;
ALTER TABLE SCH_ORCL_REPARTO_CORE.SOLICITUD DROP COLUMN ID_ESTADO_PROCESO;
ALTER TABLE SCH_ORCL_REPARTO_CORE.SOLICITUD ADD ID_APODERADO_DEMANDADO NUMBER(19);
ALTER TABLE SCH_ORCL_REPARTO_CORE.SOLICITUD MODIFY ID_APODERADO_DEMANDANTE NUMBER(19)NOT NULL;	

ALTER TABLE SCH_ORCL_REPARTO_CORE.SOLICITUD
    ADD CONSTRAINT FK_SJP_SLC_APDRDO_DMNDADO FOREIGN KEY ( ID_APODERADO_DEMANDADO )
        REFERENCES SCH_ORCL_REPARTO_CORE.SUJETO_PROCESAL ( ID_SUJETO_PROCESAL );

ALTER TABLE SCH_ORCL_REPARTO_CORE.NOVEDAD RENAME TO NOVEDAD_SOLICITUD;

DROP SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_NOVEDAD;
CREATE SEQUENCE SCH_ORCL_REPARTO_CORE.SEQ_NOVEDAD_SOLICITUD START WITH 1 CACHE 100 ORDER;

DROP TRIGGER SCH_ORCL_REPARTO_CORE.TRG_NOVEDAD;
ALTER TABLE SCH_ORCL_REPARTO_CORE.NOVEDAD_SOLICITUD RENAME COLUMN ID_NOVEDAD TO ID_NOVEDAD_SOLICITUD;
CREATE OR REPLACE TRIGGER SCH_ORCL_REPARTO_CORE.TRG_NOVEDAD_SOLICITUD BEFORE
    INSERT ON SCH_ORCL_REPARTO_CORE.NOVEDAD_SOLICITUD
    FOR EACH ROW
    WHEN ( NEW.ID_NOVEDAD_SOLICITUD IS NULL )
BEGIN
    :NEW.ID_NOVEDAD_SOLICITUD := SCH_ORCL_REPARTO_CORE.SEQ_NOVEDAD_SOLICITUD.NEXTVAL;
END;
/

ALTER TABLE SCH_ORCL_REPARTO_CORE.NOVEDAD_SOLICITUD ADD CODIGO NVARCHAR2(1000)NOT NULL;
ALTER TABLE SCH_ORCL_REPARTO_CORE.NOVEDAD_SOLICITUD ADD ID_TIPO_NOVEDAD_SOLICITUD NUMBER(19)NOT NULL;  --*****************PENDIENTE DATOS DE CARGUE PARA PODER DEJAR EL CAMPO NOT NULL

ALTER TABLE SCH_ORCL_REPARTO_CORE.NOVEDAD_SOLICITUD
    ADD CONSTRAINT FK_TNO_NVD FOREIGN KEY ( ID_TIPO_NOVEDAD_SOLICITUD )
        REFERENCES SCH_ORCL_REPARTO_CORE.TIPO_NOVEDAD_SOLICITUD ( ID_TIPO_NOVEDAD_SOLICITUD );

--******************************************************************* AJUSTANDO INDICES UNICOS *************************************************************
DROP INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_ESSOLICITUD;
CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_ESSOLICITUD ON
    SCH_ORCL_REPARTO_CORE.ESTADO_SOLICITUD (
        CODIGO
    ASC );
	
DROP INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_TSOLICITUD; 
CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_TSOLICITUD ON
    SCH_ORCL_REPARTO_CORE.TIPO_SOLICITUD (
        CODIGO
    ASC );
	
CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_SJTO_PROCESAL_CC ON
SCH_ORCL_REPARTO_CORE.SUJETO_PROCESAL (
	ID_TIPO_IDENTIFICACION
ASC,
	NUMERO_IDENTIFICACION
ASC );

DROP INDEX SCH_ORCL_REPARTO_CORE.IDX_TIPO_SUJETO_PROCESAL;
CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_TIPO_SUJETO_PROCESAL ON
    SCH_ORCL_REPARTO_CORE.TIPO_SUJETO_PROCESAL (
        CODIGO
    ASC );

DROP INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_GRUPO;
CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_GRUPO ON
    SCH_ORCL_REPARTO_CORE.GRUPO (
        CODIGO
    ASC );

CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_NOVEDAD_SOLICITUD ON
    SCH_ORCL_REPARTO_CORE.NOVEDAD_SOLICITUD (
        CODIGO
    ASC );

DROP INDEX 	SCH_ORCL_REPARTO_CORE.IDX_CODIGO_ESPECIALIDAD ;
CREATE UNIQUE INDEX SCH_ORCL_REPARTO_CORE.IDX_CODIGO_ESPECIALIDAD ON
    SCH_ORCL_REPARTO_CORE.ESPECIALIDAD (
        CODIGO
    ASC );	

DROP INDEX 	SCH_ORCL_REPARTO_CORE.IDX_CORPORACION;


--- GENERACION DE PERMISOS
DECLARE
  V_ROL  VARCHAR2(4000);
  CURSOR C_PERMISOS
  IS 
    SELECT 'GRANT SELECT, INSERT, UPDATE, DELETE ON SCH_ORCL_REPARTO_CORE.'||TABLE_NAME||' TO ' AS SENTENCIA
    FROM   USER_TABLES;
  R_PER C_PERMISOS%ROWTYPE;
BEGIN
  V_ROL := 'ROL_REPARTO_CORE';
  OPEN C_PERMISOS;
  LOOP
    FETCH C_PERMISOS INTO R_PER;
    EXIT WHEN C_PERMISOS%NOTFOUND;
      EXECUTE IMMEDIATE R_PER.SENTENCIA||V_ROL;
  END LOOP;
  CLOSE C_PERMISOS;
EXCEPTION
  WHEN OTHERS THEN
    IF C_PERMISOS%ISOPEN THEN CLOSE C_PERMISOS; END IF;
END;