/*
-------------------------------------------------------------------------------------------------------------------------------
-- OBJETIVO                  : CREACION DEL MODELO RELACIONAL BD DESARCHIVE SITIO WEB MODULO DESARCHIVE.
-- PARÁMETROS DE ENTRADA     : LA EJECUCIÓN DEL SCRIPT SOLICITA LOS SIGUIENTES PARAMETROS
								SERVICIO        : ORCL_DESARCHIVE_AUTEN_PRE
								SIZE_TABLESPACE : DEVOPS -> 10
								                  19C    -> 1000
												  21C    -> 1000
-- PARÁMETROS DE SALIDA      : NA   
-- OBJETOS QUE LO REFERENCIAN: NA
-- LIDER TÉCNICO             : GABRIEL EDUARDO DUARTE             
-- FECHAHORA                 : 2021/11/29
-- REALIZADO POR             : INFORMATICA & TECNOLOGIA (GEDV - JAPC)
--	                           ESTE COMPONENTE FUE REALIZADO BAJO LA METODOLOGÍA DE DESARROLLO DE INFORMÁTICA & TECNOLOGÍA 
--                             Y SE ENCUENTRA PROTEGIDO POR LAS LEYES DE DERECHOS DE AUTOR.
-- FECHAHORA MODIFICACIÓN    : 
-- LIDER MODIFICACIÓN        : 
-- REALIZADO POR             : 
-- OBJETIVO MODIFICACIÓN     : 
--                             
-----------------------------------------------------------------------------------------------------------------------------
*/
DECLARE
   V_CREASERVICIO   VARCHAR2(4000);
   V_INICIASERVICIO VARCHAR2(4000);
   V_SERVICIO       VARCHAR2(500);
   V_SIZE_TBL       NUMBER;
   V_CREATABLESDATA VARCHAR2(4000);
   V_CREATABLESIDX  VARCHAR2(4000);
   V_RUTA           VARCHAR2(500);
   V_RUTA_DATA      VARCHAR2(500);
   V_RUTA_IDX       VARCHAR2(500);
   V_CREA_USUARIO   VARCHAR2(500);
   V_USUARIO        VARCHAR2(500);
   V_CREA_ROL       VARCHAR2(500);   
   
BEGIN
    DELETE FROM AUDITORIA_OBJETOS;COMMIT;
	PROC_AUDITA_OBJETOS('DESARCHIVE','ORCL_DESARCHIVE_AUTEN_PRE','CREACION BD',NULL,NULL);
    V_SERVICIO := '&SERVICIO';
	V_SIZE_TBL := '&SIZE_TABLESPACE';
    --CREANDO SERVICIO
    V_CREASERVICIO := 'BEGIN
                          DBMS_SERVICE.CREATE_SERVICE(
                            SERVICE_NAME => :SERVICIO,
                            NETWORK_NAME => :SERVICIO);
                        END;';
    EXECUTE IMMEDIATE V_CREASERVICIO USING V_SERVICIO;                    
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA SERVICIO '||V_SERVICIO||' OK.',NULL,NULL);

    --INICIANDO SERVICIO
    V_INICIASERVICIO := ' BEGIN
                           DBMS_SERVICE.START_SERVICE(SERVICE_NAME => :SERVICIO);
                        END;';
    EXECUTE IMMEDIATE V_INICIASERVICIO USING V_SERVICIO;
    PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA SERVICIO '||V_SERVICIO||' OK.',NULL,NULL);
    
    EXECUTE IMMEDIATE 'CREATE ROLE ROL_DESARCHIVE_AUTEN_PRE';
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA ROL OK.',NULL,NULL);
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE, CREATE VIEW, CREATE TRIGGER,CREATE PROCEDURE TO ROL_DESARCHIVE_AUTEN_PRE';
    PROC_AUDITA_OBJETOS(NULL,NULL,'OTORGA PERMISOS OK.',NULL,NULL);
    
    ---OBTENIENDO RUTA DE INSTALACION DEL MOTOR
    SELECT SUBSTR(FILE_NAME,1,INSTR(FILE_NAME,'\',-1))
    INTO   V_RUTA
    FROM   DBA_DATA_FILES
    WHERE  ROWNUM = 1;

    ---CREANDO TABLESPACEDATA
    V_RUTA_DATA      := V_RUTA||V_SERVICIO||'_DATA.DBF';
    V_CREATABLESDATA := 'CREATE TABLESPACE '||V_SERVICIO||'_DATA DATAFILE '''||V_RUTA_DATA||''' SIZE '||V_SIZE_TBL||'M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED';
    EXECUTE IMMEDIATE V_CREATABLESDATA;
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA TABLESPACE DATA '||V_RUTA_DATA||' OK...',NULL,NULL);

    ---CREANDO TABLESPACE IDX
    V_RUTA_IDX      := V_RUTA||V_SERVICIO||'_IDX.DBF';
    V_CREATABLESIDX := 'CREATE TABLESPACE '||V_SERVICIO||'_IDX  DATAFILE '''||V_RUTA_IDX||''' SIZE '||V_SIZE_TBL||'M AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED';
    EXECUTE IMMEDIATE V_CREATABLESIDX;
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA TABLESPACE IDX '||V_RUTA_IDX||' OK...',NULL,NULL);

    ---CREANDO USUARIO
    V_USUARIO := 'SCH_'||V_SERVICIO;
    V_CREA_USUARIO := '
                    CREATE USER '||V_USUARIO||' IDENTIFIED BY '||V_USUARIO||'
                    DEFAULT TABLESPACE '||V_SERVICIO||'_DATA
                    TEMPORARY TABLESPACE TEMP
                    QUOTA UNLIMITED ON '||V_SERVICIO||'_DATA';
    EXECUTE IMMEDIATE V_CREA_USUARIO;   
    PROC_AUDITA_OBJETOS(NULL,NULL,'CREA USUARIO '||V_USUARIO||' OK...',NULL,NULL);

    ---OTORGANDO PERMISOS AL USUARIO
    EXECUTE IMMEDIATE 'GRANT ROL_DESARCHIVE_AUTEN_PRE TO '||V_USUARIO;
    PROC_AUDITA_OBJETOS(NULL,NULL,'OTORTANDO PERMISOS ROL, OK...',NULL,NULL);
    PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA CREACION OBJETOS BD ....',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR DURANTE INSTALACION BD',SQLCODE,SQLERRM);
END;
/

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS (
    ID_APPS_INT NUMBER(38) NOT NULL,
    NOMBRE      NVARCHAR2(1000) NOT NULL,
    HOST        NVARCHAR2(1000) NOT NULL,
    PORT        NVARCHAR2(1000),
    USERNAME    NVARCHAR2(100) NOT NULL,
    PASSWORD    NVARCHAR2(100) NOT NULL,
    DETALLE     NVARCHAR2(1000),
    ES_ACTIVO   NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS APLICACIONES INTERNAS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS.ID_APPS_INT IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE LA APLICACIÓN INTERNA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DE LA APLICACIÓN INTERNA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS.HOST IS
    'CAMPO QUE ALMACENA EL HOST (DIRECCIÓN WEB) DE LA APLICACIÓN INTERNA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS.PORT IS
    'CAMPO QUE ALMACENA EL PUERTO DE LA APLICACIÓN INTERNA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS.USERNAME IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL USUARIO DE LA APLICACIÓN INTERNA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS.PASSWORD IS
    'CAMPO QUE ALMACENA LA CONTRASEÑA DEL USUARIO DE LA APLICACIÓN INTERNA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS.DETALLE IS
    'CAMPO QUE ALMACENA EL DETALLE O LA DESCRIPCIÓN DE LA APLICACIÓN INTERNA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE LA APLICACIÓN INTERNA.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS ADD CONSTRAINT PK_API PRIMARY KEY ( ID_APPS_INT );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.CARGO (
    ID_CARGO  NUMBER(38) NOT NULL,
    NOMBRE    NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.CARGO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS CARGOS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CARGO.ID_CARGO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL CARGO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CARGO.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL CARGO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CARGO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL CARGO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.CARGO ADD CONSTRAINT PK_CRG PRIMARY KEY ( ID_CARGO );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL (
    ID_CREDENCIAL      NUMBER(38) NOT NULL,
    USUARIO            NVARCHAR2(100) NOT NULL,
    CONTRASENA         NVARCHAR2(100) NOT NULL,
    INTENTOS_INVALIDOS NUMBER(38) NOT NULL,
    FECHA_BLOQUEO      DATE,
    ES_BLOQUEADO       NUMBER(1) NOT NULL,
    ID_USUARIO         NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS CREDENCIALES DE LOS USUARIOS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL.ID_CREDENCIAL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE CREDENCIAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL.USUARIO IS
    'CAMPO QUE ALMACENA EL USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL.CONTRASENA IS
    'CAMPO QUE ALMACENA LA CONTRASEÑA.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL.INTENTOS_INVALIDOS IS
    'CAMPO QUE ALMACENA LOS INTENTOS INVÁLIDOS DE INGRESO A LA APLICACIÓN.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL.FECHA_BLOQUEO IS
    'CAMPO QUE ALMACENA LA FECHA DE BLOQUEO DEL USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL.ES_BLOQUEADO IS
    'CAMPO QUE ALMACENA EL ESTADO BLOQUEADO O NO BLOQUEADO DEL USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL.ID_USUARIO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL USUARIO.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_AUTEN_PRE.IDX_CREDENCIAL ON
    SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL (
        ID_USUARIO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL ADD CONSTRAINT PK_CRD PRIMARY KEY ( ID_CREDENCIAL );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO (
    ID_DEPARTAMENTO NUMBER(38) NOT NULL,
    CODIGO          NVARCHAR2(1000) NOT NULL,
    NOMBRE          NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO       NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS DEPARTAMENTOS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO.ID_DEPARTAMENTO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL DEPARTAMENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO POR CADA DEPARTAMENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL DEPARTAMENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL DEPARTAMENTO.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_AUTEN_PRE.IDX_DEPARTAMENTO ON
    SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO ADD CONSTRAINT PK_DEP PRIMARY KEY ( ID_DEPARTAMENTO );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO (
    ID_DETALLE_USUARIO NUMBER(38) NOT NULL,
    ID_USUARIO         NUMBER(38) NOT NULL,
    ID_CARGO           NUMBER(38) NOT NULL,
    ID_MUNICIPIO       NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DEL DETALLE DE LOS USUARIOS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO.ID_DETALLE_USUARIO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL DETALLE DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO.ID_USUARIO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO.ID_CARGO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL CARGO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO.ID_MUNICIPIO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL MUNICIPIO.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_AUTEN_PRE.IDX_DETALLE_USUARIO ON
    SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO (
        ID_USUARIO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO ADD CONSTRAINT PK_DTU PRIMARY KEY ( ID_DETALLE_USUARIO );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.GRUPO (
    ID_GRUPO  NUMBER(38) NOT NULL,
    NOMBRE    NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.GRUPO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS GRUPOS DE ROLES DE USUARIO DE LA APLICACIÓN.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.GRUPO.ID_GRUPO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL GRUPO DE ROLES DE USUARIO DE LA APLICACIÓN.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.GRUPO.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL GRUPO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.GRUPO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL GRUPO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.GRUPO ADD CONSTRAINT PK_GRP PRIMARY KEY ( ID_GRUPO );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU (
    ID_MENU       NUMBER(38) NOT NULL,
    NOMBRE        NVARCHAR2(1000) NOT NULL,
    ID_MENU_PADRE NUMBER(38) NOT NULL,
    URL           NVARCHAR2(1000),
    ES_ACTIVO     NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS MENÚS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU.ID_MENU IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE MENÚ.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL MENÚ.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU.ID_MENU_PADRE IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL MENÚ PADRE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU.URL IS
    'CAMPO QUE ALMACENA LA DIRECCIÓN URL DEL MENÚ.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL MENÚ.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU ADD CONSTRAINT PK_MEN PRIMARY KEY ( ID_MENU );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU_X_ROL (
    ID_MENU            NUMBER(38) NOT NULL,
    ID_ROL             NUMBER(38) NOT NULL,
    ID_PERMISOSXMODULO NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU_X_ROL IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS MENÚS POR ROLES (PERFILES) DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU_X_ROL.ID_MENU IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE MENÚ.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU_X_ROL.ID_ROL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU_X_ROL.ID_PERMISOSXMODULO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE PERMISO POR MÓDULO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU_X_ROL ADD CONSTRAINT PK_MXR PRIMARY KEY ( ID_MENU,
                                                                                         ID_ROL );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MUNICIPIO (
    ID_MUNICIPIO         NUMBER(38) NOT NULL,
    CODIGO               NVARCHAR2(1000) NOT NULL,
    NOMBRE               NVARCHAR2(1000) NOT NULL,
    ES_VISIBLE_SITIO_WEB NUMBER(1) NOT NULL,
    ES_ACTIVO            NUMBER(1) NOT NULL,
    ID_DEPARTAMENTO      NUMBER(38) NOT NULL
);

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_AUTEN_PRE.IDX_CODIGO_MUN ON
    SCH_ORCL_DESARCHIVE_AUTEN_PRE.MUNICIPIO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MUNICIPIO ADD CONSTRAINT PK_MUN PRIMARY KEY ( ID_MUNICIPIO );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PARAMETRO (
    ID_PARAMETRO     NUMBER(38) NOT NULL,
    NOMBRE_CLAVE     NVARCHAR2(1000) NOT NULL,
    VALOR            NVARCHAR2(1000) NOT NULL,
    ID_PROCEDIMIENTO NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PARAMETRO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS PARÁMETROS UTILIZADOS EN LA APLICACIÓN.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PARAMETRO.ID_PARAMETRO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PARAMETRO.NOMBRE_CLAVE IS
    'CAMPO QUE ALMACENA EL NOMBRE CLAVE DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PARAMETRO.VALOR IS
    'CAMPO QUE ALMACENA EL VALOR DEL PARÁMETRO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PARAMETRO.ID_PROCEDIMIENTO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL PROCEDIMIENTO AL CUAL PERTENECE EL PARÁMETRO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PARAMETRO ADD CONSTRAINT PK_PRM PRIMARY KEY ( ID_PARAMETRO );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO (
    ID_PERMISOSXMODULO NUMBER(38) NOT NULL,
    CONSULTAR          NUMBER(1) NOT NULL,
    CREAR              NUMBER(1) NOT NULL,
    EDITAR             NUMBER(1) NOT NULL,
    ES_ACTIVO          NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS PERMISOS POR MÓDULO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO.ID_PERMISOSXMODULO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL PERMISO POR ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO.CONSULTAR IS
    'CAMPO QUE INDICA SI EL PERMISO DE CONSULTAR ESTÁ ACTIVO PARA EL MÓDULO CORRESPONDIENTE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO.CREAR IS
    'CAMPO QUE INDICA SI EL PERMISO DE CREAR ESTÁ ACTIVO PARA EL MÓDULO CORRESPONDIENTE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO.EDITAR IS
    'CAMPO QUE INDICA SI EL PERMISO DE EDITAR ESTÁ ACTIVO PARA EL MÓDULO CORRESPONDIENTE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL PERMISO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO ADD CONSTRAINT PK_PEM PRIMARY KEY ( ID_PERMISOSXMODULO );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL (
    ID_PERMXMODXROL NUMBER(38) NOT NULL,
    ID_MENU         NUMBER(38) NOT NULL,
    ID_ROL          NUMBER(38) NOT NULL,
    CONSULTAR       NUMBER(1) NOT NULL,
    CREAR           NUMBER(1) NOT NULL,
    EDITAR          NUMBER(1) NOT NULL,
    ES_ACTIVO       NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS PERMISOS POR MÓDULO POR ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL.ID_PERMXMODXROL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE PERMISO POR MÓDULO POR ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL.ID_MENU IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE MENÚ.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL.ID_ROL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL.CONSULTAR IS
    'CAMPO QUE INDICA SI EL ROL TIENE PERMISO DE CONSULTAR EN EL MENÚ CORRESPONDIENTE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL.CREAR IS
    'CAMPO QUE INDICA SI EL ROL TIENE PERMISO DE CREAR EN EL MENÚ CORRESPONDIENTE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL.EDITAR IS
    'CAMPO QUE INDICA SI EL ROL TIENE PERMISO DE EDITAR EN EL MENÚ CORRESPONDIENTE.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL PERMISO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL ADD CONSTRAINT PK_PMR PRIMARY KEY ( ID_PERMXMODXROL );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO (
    ID_PROCEDIMIENTO NUMBER(38) NOT NULL,
    CODIGO           NVARCHAR2(1000) NOT NULL,
    NOMBRE           NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO        NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS PROCEDIMIENTOS O SISTEMAS QUE TIENEN PARÁMETROS PARA SU FUNCIONAMIENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO.ID_PROCEDIMIENTO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE PROCEDIMIENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO.CODIGO IS
    'CAMPO QUE ALMACENA EL CÓDIGO ÚNICO POR CADA PROCEDIMIENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL PROCEDIMIENTO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL PROCEDIMENTO.';

CREATE UNIQUE INDEX SCH_ORCL_DESARCHIVE_AUTEN_PRE.IDX_PROCEDIMIENTO ON
    SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO (
        CODIGO
    ASC );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO ADD CONSTRAINT PK_PRC PRIMARY KEY ( ID_PROCEDIMIENTO );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL (
    ID_ROL    NUMBER(38) NOT NULL,
    NOMBRE    NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS ROLES (PERFILES) DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL.ID_ROL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DE ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE ROL.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL ADD CONSTRAINT PK_ROL PRIMARY KEY ( ID_ROL );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROLESXGRUPO (
    ID_ROL    NUMBER(38) NOT NULL,
    ID_GRUPO  NUMBER(38) NOT NULL,
    ES_ACTIVO NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROLESXGRUPO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS ROLES (PERFILES) POR GRUPO DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROLESXGRUPO.ID_ROL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE ROL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROLESXGRUPO.ID_GRUPO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE GRUPO';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROLESXGRUPO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE ROL POR GRUPO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROLESXGRUPO ADD CONSTRAINT PK_RXG PRIMARY KEY ( ID_GRUPO,
                                                                                          ID_ROL );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SECCIONAL (
    ID_SECCIONAL NUMBER(38) NOT NULL,
    NOMBRE       NVARCHAR2(1000) NOT NULL,
    ES_ACTIVO    NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SECCIONAL IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LAS SECCIONALES.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.SECCIONAL.ID_SECCIONAL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE LA SECCIONAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.SECCIONAL.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DE LA SECCIONAL.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.SECCIONAL.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE LA SECCIONAL.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SECCIONAL ADD CONSTRAINT PK_SCN PRIMARY KEY ( ID_SECCIONAL );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.TIPO_IDENTIFICACION (
    ID_TIPO_IDENTIFICACION NUMBER(38) NOT NULL,
    NOMBRE                 NVARCHAR2(500) NOT NULL,
    ABREVIACION            NVARCHAR2(1000),
    ES_ACTIVO              NUMBER(1) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.TIPO_IDENTIFICACION IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS TIPO DE IDENTIFICACIÓN.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.TIPO_IDENTIFICACION.ID_TIPO_IDENTIFICACION IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DE TIPO DE IDENTIFICACIÓN.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.TIPO_IDENTIFICACION.NOMBRE IS
    'CAMPO QUE ALMACENA EL NOMBRE DEL TIPO DE IDENTIFICACIÓN.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.TIPO_IDENTIFICACION.ABREVIACION IS
    'CAMPO QUE ALMACENA LA ABREVIACIÓN DEL TIPO DE IDENTIFICACIÓN.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.TIPO_IDENTIFICACION.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DEL TIPO DE IDENTIFICACIÓN.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.TIPO_IDENTIFICACION ADD CONSTRAINT PK_TID PRIMARY KEY ( ID_TIPO_IDENTIFICACION );

CREATE TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO (
    ID_USUARIO             NUMBER(38) NOT NULL,
    NUMERO_IDENTIFICACION  NVARCHAR2(1000) NOT NULL,
    PRIMER_NOMBRE          NVARCHAR2(1000),
    SEGUNDO_NOMBRE         NVARCHAR2(1000),
    PRIMER_APELLIDO        NVARCHAR2(1000),
    SEGUNDO_APELLIDO       NVARCHAR2(1000),
    EMAIL                  NVARCHAR2(2000) NOT NULL,
    RAZON_SOCIAL           NVARCHAR2(2000),
    ES_ACTIVO              NUMBER(1) NOT NULL,
    ID_ROL                 NUMBER(38) NOT NULL,
    ID_TIPO_IDENTIFICACION NUMBER(38) NOT NULL
);

COMMENT ON TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO IS
    'TABLA QUE ALMACENA LA INFORMACIÓN DE LOS USUARIOS.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.ID_USUARIO IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR ÚNICO DEL USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.NUMERO_IDENTIFICACION IS
    'CAMPO QUE ALMACENA EL NÚMERO DE IDENTIFICACIÓN DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.PRIMER_NOMBRE IS
    'CAMPO QUE ALMACENA EL PRIMER NOMBRE DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.SEGUNDO_NOMBRE IS
    'CAMPO QUE ALMACENA EL SEGUNDO NOMBRE DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.PRIMER_APELLIDO IS
    'CAMPO QUE ALMACENA EL PRIMER APELLIDO DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.SEGUNDO_APELLIDO IS
    'CAMPO QUE ALMACENA EL SEGUNDO APELLIDO DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.EMAIL IS
    'CAMPO QUE ALMACENA EL CORREO ELECTRÓNICO DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.ES_ACTIVO IS
    'CAMPO QUE ALMACENA EL ESTADO ACTIVO O INACTIVO DE USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.ID_ROL IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DE ROL AL CUAL PERTENECE EL USUARIO.';

COMMENT ON COLUMN SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO.ID_TIPO_IDENTIFICACION IS
    'CAMPO QUE ALMACENA EL IDENTIFICADOR DEL TIPO DE IDENTIFICACIÓN DE USUARIO.';

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO ADD CONSTRAINT PK_USU PRIMARY KEY ( ID_USUARIO );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO
    ADD CONSTRAINT FK_CRG_DTU FOREIGN KEY ( ID_CARGO )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.CARGO ( ID_CARGO );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MUNICIPIO
    ADD CONSTRAINT FK_DEP_MUN FOREIGN KEY ( ID_DEPARTAMENTO )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO ( ID_DEPARTAMENTO );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROLESXGRUPO
    ADD CONSTRAINT FK_GRP_RXG FOREIGN KEY ( ID_GRUPO )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.GRUPO ( ID_GRUPO );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU_X_ROL
    ADD CONSTRAINT FK_MEN_MXR FOREIGN KEY ( ID_MENU )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU ( ID_MENU );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO
    ADD CONSTRAINT FK_MUN_DTU FOREIGN KEY ( ID_MUNICIPIO )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.MUNICIPIO ( ID_MUNICIPIO );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU_X_ROL
    ADD CONSTRAINT FK_PEM_ROL FOREIGN KEY ( ID_PERMISOSXMODULO )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO ( ID_PERMISOSXMODULO );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.PARAMETRO
    ADD CONSTRAINT FK_PRC_PRM FOREIGN KEY ( ID_PROCEDIMIENTO )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO ( ID_PROCEDIMIENTO );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU_X_ROL
    ADD CONSTRAINT FK_ROL_MXR FOREIGN KEY ( ID_ROL )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL ( ID_ROL );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROLESXGRUPO
    ADD CONSTRAINT FK_ROL_RXG FOREIGN KEY ( ID_ROL )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL ( ID_ROL );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO
    ADD CONSTRAINT FK_ROL_USU FOREIGN KEY ( ID_ROL )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL ( ID_ROL );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO
    ADD CONSTRAINT FK_TID_USU FOREIGN KEY ( ID_TIPO_IDENTIFICACION )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.TIPO_IDENTIFICACION ( ID_TIPO_IDENTIFICACION );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL
    ADD CONSTRAINT FK_USU_CRD FOREIGN KEY ( ID_USUARIO )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO ( ID_USUARIO );

ALTER TABLE SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO
    ADD CONSTRAINT FK_USU_DTU FOREIGN KEY ( ID_USUARIO )
        REFERENCES SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO ( ID_USUARIO );

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_APPS_INTERNAS START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_APPS_INTERNAS BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.APPS_INTERNAS
    FOR EACH ROW
    WHEN ( NEW.ID_APPS_INT IS NULL )
BEGIN
    :NEW.ID_APPS_INT := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_APPS_INTERNAS.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_CARGO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_CARGO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.CARGO
    FOR EACH ROW
    WHEN ( NEW.ID_CARGO IS NULL )
BEGIN
    :NEW.ID_CARGO := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_CARGO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_CREDENCIAL START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_CREDENCIAL BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.CREDENCIAL
    FOR EACH ROW
    WHEN ( NEW.ID_CREDENCIAL IS NULL )
BEGIN
    :NEW.ID_CREDENCIAL := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_CREDENCIAL.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_DEPARTAMENTO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_DEPARTAMENTO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.DEPARTAMENTO
    FOR EACH ROW
    WHEN ( NEW.ID_DEPARTAMENTO IS NULL )
BEGIN
    :NEW.ID_DEPARTAMENTO := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_DEPARTAMENTO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_DETALLE_USUARIO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_DETALLE_USUARIO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.DETALLE_USUARIO
    FOR EACH ROW
    WHEN ( NEW.ID_DETALLE_USUARIO IS NULL )
BEGIN
    :NEW.ID_DETALLE_USUARIO := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_DETALLE_USUARIO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_GRUPO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_GRUPO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.GRUPO
    FOR EACH ROW
    WHEN ( NEW.ID_GRUPO IS NULL )
BEGIN
    :NEW.ID_GRUPO := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_GRUPO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_MENU START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_MENU BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.MENU
    FOR EACH ROW
    WHEN ( NEW.ID_MENU IS NULL )
BEGIN
    :NEW.ID_MENU := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_MENU.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_MUNICIPIO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_MUNICIPIO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.MUNICIPIO
    FOR EACH ROW
    WHEN ( NEW.ID_MUNICIPIO IS NULL )
BEGIN
    :NEW.ID_MUNICIPIO := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_MUNICIPIO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_PARAMETRO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_PARAMETRO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.PARAMETRO
    FOR EACH ROW
    WHEN ( NEW.ID_PARAMETRO IS NULL )
BEGIN
    :NEW.ID_PARAMETRO := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_PARAMETRO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_PERMISOSXMODULO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_PERMISOSXMODULO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOS_X_MODULO
    FOR EACH ROW
    WHEN ( NEW.ID_PERMISOSXMODULO IS NULL )
BEGIN
    :NEW.ID_PERMISOSXMODULO := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_PERMISOSXMODULO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_PERMISOSXMODULOXROL START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_PERMISOSXMODULOXROL BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.PERMISOSXMODULOXROL
    FOR EACH ROW
    WHEN ( NEW.ID_PERMXMODXROL IS NULL )
BEGIN
    :NEW.ID_PERMXMODXROL := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_PERMISOSXMODULOXROL.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_PROCESO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_PROCESO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.PROCEDIMIENTO
    FOR EACH ROW
    WHEN ( NEW.ID_PROCEDIMIENTO IS NULL )
BEGIN
    :NEW.ID_PROCEDIMIENTO := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_PROCESO.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_ROL START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_ROL BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.ROL
    FOR EACH ROW
    WHEN ( NEW.ID_ROL IS NULL )
BEGIN
    :NEW.ID_ROL := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_ROL.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_SECCIONAL START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_SECCIONAL BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.SECCIONAL
    FOR EACH ROW
    WHEN ( NEW.ID_SECCIONAL IS NULL )
BEGIN
    :NEW.ID_SECCIONAL := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_SECCIONAL.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_TIPO_IDENTIFICACION START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_TIPO_IDENTIFICACION BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.TIPO_IDENTIFICACION
    FOR EACH ROW
    WHEN ( NEW.ID_TIPO_IDENTIFICACION IS NULL )
BEGIN
    :NEW.ID_TIPO_IDENTIFICACION := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_TIPO_IDENTIFICACION.NEXTVAL;
END;
/

CREATE SEQUENCE SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_USUARIO START WITH 1 CACHE 20 ORDER;

CREATE OR REPLACE TRIGGER SCH_ORCL_DESARCHIVE_AUTEN_PRE.TRG_USUARIO BEFORE
    INSERT ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.USUARIO
    FOR EACH ROW
    WHEN ( NEW.ID_USUARIO IS NULL )
BEGIN
    :NEW.ID_USUARIO := SCH_ORCL_DESARCHIVE_AUTEN_PRE.SEQ_USUARIO.NEXTVAL;
END;
/

--- GENERACION DE PERMISOS 
DECLARE
  V_ROL  VARCHAR2(4000);
  CURSOR C_PERMISOS
  IS 
    SELECT 'GRANT SELECT, INSERT, UPDATE, DELETE ON SCH_ORCL_DESARCHIVE_AUTEN_PRE.'||TABLE_NAME||' TO ' AS SENTENCIA
	FROM   ALL_TABLES
    WHERE  OWNER = 'SCH_ORCL_DESARCHIVE_AUTEN_PRE';
  R_PER C_PERMISOS%ROWTYPE;
BEGIN
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA CREACION OBJETOS OK....',NULL,NULL);
  PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA ASIGNACION PERMISOS OBJETOS....',NULL,NULL);
  V_ROL := 'ROL_DESARCHIVE_AUTEN_PRE';
  OPEN C_PERMISOS;
  LOOP
    FETCH C_PERMISOS INTO R_PER;
    EXIT WHEN C_PERMISOS%NOTFOUND;
      EXECUTE IMMEDIATE R_PER.SENTENCIA||V_ROL;
  END LOOP;
  CLOSE C_PERMISOS;
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA ASIGNACION PERMISOS OBJETOS OK....',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    IF C_PERMISOS%ISOPEN THEN CLOSE C_PERMISOS; END IF;
	PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR GENERANDO PERMISOS....',SQLCODE,SQLERRM);
END;
/
DECLARE
  V_TEXTO VARCHAR2(4000);
  V_IDX   VARCHAR2(4000):= 'ORCL_DESARCHIVE_AUTEN_PRE_IDX';
  V_OW    VARCHAR2(4000):= 'SCH_ORCL_DESARCHIVE_AUTEN_PRE';
  CURSOR C_INDEX(P_TBL_IDX VARCHAR2,
                 P_TBL_OW  VARCHAR2)
  IS 
    SELECT ('ALTER INDEX '||OWNER||'.'||INDEX_NAME||' REBUILD TABLESPACE '||P_TBL_IDX)AS SENTENCIA
    FROM ALL_INDEXES WHERE OWNER = V_OW; 
  R_INDEX C_INDEX%ROWTYPE;
BEGIN
  PROC_AUDITA_OBJETOS(NULL,NULL,'INICIA ASIGNACION INDICES OBJETOS A TABLESPACE IDX....',NULL,NULL);
  OPEN C_INDEX(V_IDX,V_OW);
  LOOP
  FETCH C_INDEX INTO R_INDEX;
  EXIT WHEN C_INDEX%NOTFOUND;
    EXECUTE IMMEDIATE R_INDEX.SENTENCIA;
  END LOOP;
  CLOSE C_INDEX;
  EXECUTE IMMEDIATE 'ALTER USER '||V_OW||' QUOTA 1000M ON '||V_IDX||'';  -- ASIGNA LA CUOTA AL TABLESPACE DE INDICE
  PROC_AUDITA_OBJETOS(NULL,NULL,'FINALIZA ASIGNACION INDICES OBJETOS A TABLESPACE IDX OK....',NULL,NULL);
  PROC_AUDITA_OBJETOS('DESARCHIVE','ORCL_DESARCHIVE_AUTEN_PRE','FINALIZACION CREACION BD',NULL,NULL);
EXCEPTION
  WHEN OTHERS THEN
    IF C_INDEX%ISOPEN THEN CLOSE C_INDEX; END IF;
    PROC_AUDITA_OBJETOS(NULL,NULL,'ERROR ASIGNANDO OBJ A TABLESPACES IDX....',SQLCODE,SQLERRM);
END;